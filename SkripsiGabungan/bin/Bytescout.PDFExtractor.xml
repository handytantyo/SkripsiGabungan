<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytescout.PDFExtractor</name>
    </assembly>
    <members>
        <member name="T:Bytescout.PDFExtractor.AttachmentInfo">
            <summary>
            Defines various attachment information.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.FileName">
            <summary>
            Filename for the attachment.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.FileNameUnicode">
            <summary>
            Unicode Filename for the attachment (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Date">
            <summary>
            Date of the attachment (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.DateModified">
            <summary>
            Date modified (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.DateCreated">
            <summary>
            Date created (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.FolderLocation">
            <summary>
            Folder location (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.To">
            <summary>
            To field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.CC">
            <summary>
            CC field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.From">
            <summary>
            From field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.SubjectPrefix">
            <summary>
            Subject prefix, e.g. "RE: " (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Subject">
            <summary>
            Subject (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.GUID">
            <summary>
            GUID (unique id) (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Importance">
            <summary>
            Importance, e.g. "High" (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Order">
            <summary>
            Order (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Subtype">
            <summary>
            Subtype based on MIME types, e.g. "application/pdf" (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Description">
            <summary>
            Description (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.DisplayName">
            <summary>
            Display name  (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Summary">
            <summary>
            Summary (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.FileSize">
            <summary>
            File size (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentInfo.Thumbnail">
            <summary>
            Thumbnail (preview of the attachment) (optional).
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.AttachmentExtractor">
            <summary>
             Extracts attachments from PDF file.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.AttachmentExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.AttachmentExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.AttachmentExtractor.Count">
            <summary>
             Returns attachment count.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.GetFileName(System.Int32)">
            <summary>
             Gets the attachment filename.
            </summary>
            <returns>Attachment filename.</returns>
            <param name="index">Attachment index.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.GetSize(System.Int32)">
            <summary>
             Gets the attachment size (in bytes).
            </summary>
            <returns>Attachment size in bytes.</returns>
            <param name="index">Attachment index.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.GetAttachmentInfo(System.Int32)">
            <summary>
            Gets the detailed attachment information.
            </summary>
            <param name="index">Attachment index.</param>
            <returns>Attachment information.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.Save(System.Int32,System.String)">
            <summary>
             Saves the attachment to specified file.
            </summary>
            <returns>True if successful.</returns>
            <param name="index">Attachment index.</param>
            <param name="filename">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.SaveToFile(System.Int32,System.String)">
            <summary>
             Saves the attachment to specified file.
            </summary>
            <returns>True if successful.</returns>
            <param name="index">Attachment index.</param>
            <param name="filename">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.Save(System.Int32,System.IO.Stream)">
            <summary>
             Saves the attachment to stream.
            </summary>
            <param name="index">Attachment index.</param>
            <param name="outputStream">Output stream.</param>
            <returns>True if successful.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.AttachmentExtractor.SaveToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves the attachment to stream.
            </summary>
            <param name="index">Attachment index.</param>
            <param name="outputStream">Output stream.</param>
            <returns>True if successful.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFContentType">
            <summary>
            Defines PDF content types.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.PDFContentType.Document">
            <summary>
            (0) Normal document.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.PDFContentType.Portfolio">
            <summary>
            (1) Portfolio. 
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.PDFContentType.XFAForm">
            <summary>
            (2) XFA Form.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.ExtractionAreaUsageMode">
            <summary>
            Defines how extraction area (if any) is treated when doing text extraction or text search.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ExtractionAreaUsageMode.UseAllIntersectingObjects">
            <summary>
            (0) Extract or search within any text object intersecting with extraction area (if defined). Default mode.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ExtractionAreaUsageMode.UseObjectsCompetelyInsideAreaOnly">
            <summary>
            (1) Extracts or search within text objects which are completely inside extraction area.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.PageDataCaching">
            <summary>
            Page data caching behaviour.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.PageDataCaching.None">
            <summary>
             Previously accessed page data is not cached and disposed immediately after any other page accessed. Reduces memory usage.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.PageDataCaching.KeepAllPages">
            <summary>
            Caches all parsed pages. You can manually dispose cached pages using <see cref="M:Bytescout.PDFExtractor.BaseTextExtractor.DisposePage(System.Int32)" /> method.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.OngoingOperation">
            <summary>
            The ongoing operation for <see cref="E:Bytescout.PDFExtractor.BaseExtractor.ProgressChanged" /> event.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OngoingOperation.DocumentLoading">
            <summary>
            Document is being loaded.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OngoingOperation.DocumentProcessing">
            <summary>
            Document is being processed.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.BaseExtractor">
            <summary>
             Defines a base class for PDF extractors.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.BaseExtractor.ProgressEventHandler">
            <summary>
            Defines Progress event parameters.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="ongoingOperation">Ongoing operaration the progress reported from.</param>
            <param name="progress">Progress value from 0 to 100.</param>
            <param name="cancel">Interruption flag. Set it <c>true</c> to interrupt the processing.</param>
        </member>
        <member name="E:Bytescout.PDFExtractor.BaseExtractor.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.BaseExtractor.ParsingErrorEventHandler">
            <summary>
            Defines ParsingError event parameters.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="exceptionInfo">Internal information about the parsing error.</param>
            <param name="abort">Interruption flag. If <c>true</c> the extractor will throw an exception that interrupts the processing.</param>
        </member>
        <member name="E:Bytescout.PDFExtractor.BaseExtractor.ParsingError">
            <summary>
            Raised on PDF document parsing errors. This usually indicates a damaged document.
            </summary>
            <remarks>
            If this event is handled, and the <c>abort</c> in the event args was set to <c>false</c>, 
            the extractor will skip the error and try to process the document further. 
            Otherwise the extractor will throw an exception interrupting the processing.
            </remarks>
        </member>
        <member name="E:Bytescout.PDFExtractor.BaseExtractor.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.Password">
            <summary>
             PDF document owner password.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.Version">
            <summary>
             Gets the component version number.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.Encrypted">
            <summary>
             Document encryption.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.PageDataCaching">
            <summary>
            Controls page data caching behavior.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.Profiles">
            <summary>
            Profiles, applied to object.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.IsDocumentLoaded">
            <summary>
            Get the document loaded state.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.#ctor">
            <summary>
             Default constructor.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the extractor class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.Dispose">
            <summary>
            Releases the unmanaged resources used by the instance and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.Reset">
            <summary>
             Resets the instance, disposes internal resources and releases the file.
             Use this method before loading another PDF file.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.LoadDocumentFromFile(System.String)">
            <summary>
             Loads PDF document from specified file. 
             Call .Reset() method before loading another file into the same instance so it will release the lock for the file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageCount">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRotationAngle(System.Int32)">
            <summary>
            Returns the rotation angle of specified page.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Rotation angle in degrees.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRectangle(System.Int32)">
            <summary>
            Gets the page rectangle.
            </summary>
            <param name="pageIndex">Index of the page.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRect_Left(System.Int32)">
            <summary>
            Gets the specified page left coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Left coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRect_Top(System.Int32)">
            <summary>
            Gets the specified page top coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Top coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRect_Width(System.Int32)">
            <summary>
            Gets the specified page width.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page width in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.GetPageRect_Height(System.Int32)">
            <summary>
            Gets the specified page height.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page height in points.</returns>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.ContentType">
            <summary>
            Returns content type of PDF document: normal document, portfolio or XFA form.
            To extract files from PDF portfolio please use AttachmentExtractor class.
            To extract XFA form content XFAFormExtractor class.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.EmbeddedFileCount">
            <summary>
            Property is disabled to speed up the document loading. Please use <see cref="T:Bytescout.PDFExtractor.AttachmentExtractor" /> to work with attachments.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.IsEncrypted">
            <summary>
             Gets the document encrypted state.
            </summary>
            <returns>Encryption state.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.CheckPermissions">
            <summary>
            This option defines if the SDK should check permissions in the PDF 
            and generate PDFExtractorPermissionsException when permissions is not set for the desired action
            Set to True by default. You should not change it to another value.
            IMPORTANT: THIS OPTION HAVE TO BE ENABLED AND SET TO "TRUE" TO RESPECT OWNERS OF PDF DOCUMENTS
            IF YOU SET IT TO FALSE TO IGNORE PERMISSIONS WHICH ARE SET IN PDF DOCUMENT THEN 
            YOU ARE SOLELY LIABLE FOR THIS ACTION AND FOR ANY COPYRIGHT OR OTHER 
            VIOLATIONS AT YOUR OWN RISK. BYTESCOUT IS NOT LIABLE FOR ANY DAMAGES, LOSSES, COPYRIGHT INFRINGEMENTS OR ANY 
            OTHER CONSEQUENCES CAUSED BY IGNORING PERMISSIONS OF PDF DOCUMENT.
            BY CHANGING THIS OPTION YOU ARE CONFIRMING YOU ARE UNDERSTANDING ALL WRITTEN ABOVE AND DOING IT AT YOUR OWN RISK
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseExtractor.ExtractionAreaUsageMode">
            <summary>
            Controls how an extraction area (if any defined)
            is used when doing a text search to control if we are searching
            within any objects intersecting with an area or only within objects completely inside an area
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.SetExtractionArea(System.Drawing.RectangleF)">
            <summary>
             Sets the extraction area by rectangle.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.SetExtractionArea(System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Sets the extraction area by coordinates and dimensions.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.ResetExtractionArea">
            <summary>
             Resets the extraction area to full page.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.LoadProfiles(System.String)">
            <summary>
            Loads profiles from file.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.LoadProfilesFromString(System.String)">
            <summary>
            Loads profiles from JSON string.
            </summary>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseExtractor.LoadAndApplyProfiles(System.String)">
            <summary>
            Loads profiles from JSON string and automatically applies them.
            </summary>
            <remarks>Note, all existing profiles are discarded before loading profiles from the provided string.</remarks>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.OCRMode">
            <summary>
            OCR (Optical Character Recognition) usage mode.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.Off">
            <summary>
            Off. No OCR is used.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.Auto">
            <summary>
            Similar to TextFromImagesAndVectorsAndFonts but checks if the page contains raster images and vector drawings only to decide if should use OCR functionality.
            Runs OCR if page contains almost no text and have 1 or more images / vector drawings so tries to extract text from images and drawings
            The result contains text objects produced from images and vector drawings using OCR functionality if any.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesAndVectorsAndFonts">
            <summary>
            Always runs OCR to extract text from images and vector drawings (if any).
            See also .TextFromImagesAndFonts mode to read from objects except vector drawings.
            The result contains text objects from PDF and text objects produced from images and vector drawings using OCR functionality if any.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesAndVectorsAndRepairedFonts">
            <summary>
            Special mode: extracts text from images and vector drawings and repairs text from fonts fixing the incorrect encoding.
            Some PDF files contain visible text which is damaged when copied (appears as ? or other incorrect symbols when extracted or copied).
            This mode repairs damaged text like that using the OCR functionality.
            The result contains text objects from PDF and text objects produced from images and vector drawings using OCR functionality if any.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromRepairedFontsOnly">
            <summary>
            Special mode: repairs text objects with incorrect encoding using OCR functionality. Images and vectors are not processed in this mode.
            Some PDF files contains visible text which is damaged when copied (appears as ? or other incorrect symbols when extracted or copied).
            This mode repairs damaged text like this using OCR function.
            This mode returns repaired text objects only (no images or vector drawings are processed).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesAndRepairedFonts">
            <summary>
            Special mode: extracts text from raster images (but skips vector drawings) and repairs text objects with incorrect encoding
            Some PDF files contains visible text which is damaged when copied (appears as ? or other incorrect symbols when extracted or copied).
            This mode repairs damaged text like this using the OCR functionality.
            This mode returns repaired text objects and text objects produced from raster images (no vector drawings are processed).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesAndFonts">
            <summary>
            Runs OCR to extract text from images (but skips vector drawings) plus the text objects.
            The result contains text objects from PDF and text objects produced from images (but no vector drawings are processed) using OCR functionality.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesOnly">
            <summary>
            Runs OCR to extract text from images (but skips vector drawings) plus the text objects.
            The result contains text extracted from images only.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromVectorsOnly">
            <summary>
            Runs OCR to extract text from vector drawings only.
            The result contains text objects from vector drawings only.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRMode.TextFromImagesAndVectorsOnly">
            <summary>
            Runs OCR to extract text from images and vector drawings only. no text from pdf objects is included.
            The result contains text objects from vector drawings only.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.LineGroupingMode">
            <summary>
            Sets if lines are not checked to be merged, can be merged by rows, or inside columns
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.LineGroupingMode.None">
            <summary>
            No lines grouping. Each line is processed as a single row.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.LineGroupingMode.GroupByRows">
            <summary>
            Each row is checked against next row to see if these rows can be grouped.
            Rows will be grouped only if all cells in the current row are allowed to be grouped with all cells in next row.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.LineGroupingMode.GroupByColumns">
            <summary>
            Each cell is checked against cell below in next row to see if the can be grouped.
            Cells will be grouped inside the same column even if cells in another columns can't be grouped.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.ColumnDetectionMode">
            <summary>
            Defines how columns are detected in the text.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ColumnDetectionMode.ContentGroupsAndBorders">
            <summary>
            (0) Based on content groups and borders (vertical lines).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ColumnDetectionMode.ContentGroups">
            <summary>
            (1) Based on content groups only.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ColumnDetectionMode.Borders">
            <summary>
            (2) Based on borders (vertical lines) only.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ColumnDetectionMode.BorderedTables">
            <summary>
            (3) Detects columns inside bordered tables only.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.OCRCacheMode">
            <summary>
            OCR results caching behavior. 
            Turned off by default (no cache is used).
            In "WholePage" caching mode you may save processing time as the SDK will check if need to re-run OCR on the page
            or can just pull results from previously cached OCR results.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRCacheMode.Off">
            <summary>
             no caching enabled
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OCRCacheMode.WholePage">
            <summary>
            Whole page is cached. To use the cache extract with OCR from the whole page.
            And then read text data from regions inside page. Text will be taken from the cache for all regions inside the previous page wide region.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.BaseTextExtractor">
            <summary>
             Defines a base class for text-related PDF extractors.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.XCoordinateToleranceFactor">
            <summary>
             X coordinate tolerance factor.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.YCoordinateToleranceFactor">
            <summary>
             Y coordinate tolerance factor.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.TableXMinIntersectionRequiredInPercents">
            <summary>
             Structured extraction (CSV, XML, XLS, StructuredExtractor, TextExtractor with PreserveFormatting = true)
             This option controls how much % of the cell's rectangle should intersect (by X coordinate axis) with previous cell to treat both cells belonging to the same column.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.TableYMinIntersectionRequiredInPercents">
            <summary>
             Y coordinate tolerance factor when working with stuctured (table) data.
             This option controls how much % of the cell rectangle (by Y coordinate) should intersect with row to belong to it.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.RTLTextAutoDetectionEnabled">
            <summary>
            Enables RTL (Right-To-Left) text auto detection.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractInvisibleText">
            <summary>
            Gets or sets a value indicating whether to extract invisible text from PDF document.
            </summary>
            <value>
                <c>true</c> if extract invisible text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractShadowLikeText">
            <summary>
            Gets or sets a value indicating whether to include characters used to create "shadow" effect (when the same character appears with some offset) from PDF document.
            True by default (includes all encoded characters disregarding their real appearance).
            </summary>
            <value>
                <c>true</c> if extract shadow like characters in text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractAnnotations">
            <summary>
            Gets or sets a value indicating whether to extract text from annotation objects. Default is <c>true</c>.
            </summary>
            <value>
                <c>true</c> if extract annotations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.Unwrap">
            <summary>
            Gets or sets a value indicating whether to unwrap lines into single lines or not (especially could be useful in the column layout mode - see ExtractColumnByColumn property). Default is False.
            </summary>
            <remarks>Unwrapping works only when the formatting keeping is disabled (PreserveFormattingOnTextExtraction property is set to False).</remarks>
            <value>
                <c>true</c> if unwrap lines; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.RemoveHyphenation">
            <summary>
            Gets or sets a value indicating whether to automatically remove hyphenations in end of lines (works when Unwrap is True).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.AutoAlignColumnsToHeader">
            <summary>
            Gets or sets a value indicating whether to auto align text in columns while extracting text (with formatting preserved), csv, xml or not.
            True by default (i.e. align text in columns and header).
            False means to not auto align text and try to reproduce the original table.
            </summary>
            <value>
                <c>true</c> if try to auto align text in columns for text (with formatting), csv, xml, xls extraction. Set to <c>false</c> to provide more precise representation of the original table.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.PreserveFormattingOnTextExtraction">
            <summary>
            Gets or sets a value indicating whether to preserve the text formatting on the extraction.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.DetectLinesInsteadOfParagraphs">
            <summary>
             Lines detection option. 
             Obsolete: Use <see cref="P:Bytescout.PDFExtractor.BaseTextExtractor.LineGroupingMode" /> instead.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.TrimSpaces">
            <summary>
             Gets or sets a value indicating whether to remove trailing and ending spaces from table cell values.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractColumnByColumn">
            <summary>
            Gets or sets a value indicating whether to extract text column by column or use the visual layout of the text while extracting.
            False by default.
            if you are processing PDF newspapers with text columns, set this property to True so you get column by column instead of line by line
            </summary>
            <value>
                <c>true</c> if extract column by column; otherwise extracts line by line (default), <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.DetectNewColumnBySpacesRatio">
            <summary>
             Space ratio between words.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRMode">
            <summary>
            Recognize text on embedded images using Optical Character Recognition (OCR). Set the language using <c>OCRLanguage</c> property.
            <para>
            This option requires Bytescout.PDFExtractor.OCRExtension.dll assembly and appropriate language files in <c>OCRLanguageDataFolder</c> folder.
            The SDK is shipped with for English, Franch, German and Spanish language files. You can download more at https://github.com/tesseract-ocr/tessdata/tree/3.04.00
            </para></summary>
            <remarks>
            Optical Character Recognition implemented with opensource Tesseract OCR engine: https://github.com/tesseract-ocr. 
            </remarks>
            <seealso cref="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRLanguage" />
            <seealso cref="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRLanguageDataFolder" />
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.LineGroupingMode">
            <summary>
            Sets how lines are grouped into paragraphs.
            Default: None (no lines grouping is performed).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ColumnDetectionMode">
            <summary>
            Sets how columns are detected.
            Default: ContentGroupsAndBorders (columns are detected based on content groups and borders (vertical lines)).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRCacheMode">
            <summary>
            OCR results caching behaviour. 
            Turned off by default (no cache is used).
            In "WholePage" caching mode you may save processing time as the SDK will check if need to re-run OCR on the page
            or can just pull results from previously cached OCR results.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRLanguageDataFolder">
            <summary>
            Folder containing OCR language data files. The folder can be located anywhere by must be strongly named "tessdata".
            </summary>
            <remarks>
            By default the component expects "tessdata" in the folder containing the executing assembly.
            </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRLanguage">
            <summary>
            Language for Optical Character Recognition (OCR). The valid values are: 
            <list type="bullet"><listheader><term>Value</term><description>Language</description></listheader><item><term>"eng"</term><description>English (default)</description></item><item><term>"deu"</term><description>German</description></item><item><term>"fra"</term><description>French</description></item><item><term>"spa"</term><description>Spanish</description></item><item><term>...</term><description>See more languages at https://github.com/tesseract-ocr/tessdata/tree/3.04.00 </description></item></list></summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRResolution">
            <summary>
            Resolution of Optical Character Recognition (OCR). Default is 300 DPI.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRAutoModeMinExistingTextLength">
            <summary>
            Applies to OCRMode.Auto only:
            Min total length of existing text on current page to decide if OCR should be run or not.
            If the length of text is lesser than this property then library runs OCR for this page.
            Otherwise it extracts the existing text only.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to the document page before Optical Character Recognition (OCR). May improve the recognition quality.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.TextEncodingCodePage">
            <summary>
            Sets the default text encoding. Default encoding is Windows-1252.
            </summary>
            <remarks>You can find the full list of code pages at https://msdn.microsoft.com/en-us/library/system.text.encodinginfo.getencoding(v=vs.110).aspx </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRDetectPageRotation">
            <summary>
            Detect scanned page rotation.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.RotationAngle">
            <summary>
            Gets or sets whether to rotate document pages to specifyed angle before the extraction.
            </summary>
            <remarks>
            Note, this option is ignored if <see cref="P:Bytescout.PDFExtractor.BaseTextExtractor.OCRDetectPageRotation" /> property enabled.
            </remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.#ctor">
            <summary>
            Constructs BaseTextExtractor object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.#ctor(System.String,System.String)">
            <summary>
            Constructs the object and sets registration name and key.
            </summary>
            <param name="registrationName"></param>
            <param name="registrationKey"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.Reset">
            <summary>
             Resets the instance and disposes internal resources. Also automatically invoked by <see cref="M:Bytescout.PDFExtractor.BaseExtractor.Dispose" />.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.DisposePage(System.Int32)">
            <summary>
            Disposes the page object. 
            Uses this method carefully to destroy the page object that should not be used further.
            Useful to free allocated memory when processing huge PDF documents.
            </summary>
            <param name="pageIndex">Page index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.IsOCRRecommendedForPage(System.Int32)">
            <summary>
            Detects whether OCR is recommended for specified page. 
            OCR (Optical Character Recognition) is recommended when pages has no text objects bat has an image that might contain text.
            </summary>
            <param name="pageIndex">Page index.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ConsiderFontNames">
            <summary>
            Consider font names in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ConsiderFontSizes">
            <summary>
            Consider font sizes in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ConsiderFontColors">
            <summary>
            Consider font colors in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ConsiderVerticalBorders">
            <summary>
            Consider vertical borders colors in document text when detecting table structure and merging text objects. True by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractionColumns">
            <summary>
            Contains columns detected from last processed document page.
            </summary>
            <value>Array of column coordinates.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.BaseTextExtractor.CustomExtractionColumns">
            <summary>
            Allows to override the automatic columns detection with custom columns.
            </summary>
            <value>Array of column coordinates.</value>
            <remarks>
            Example of use: If you have a document with the same column structure on all pages, 
            you can run the extraction for the first page, take detected columns from it using <see cref="P:Bytescout.PDFExtractor.BaseTextExtractor.ExtractionColumns" /> 
            property and pass them to CustomExtractionColumns. This will allow to avoid columns varying caused by minor 
            changes in other pages structure and also speed up the extraction.
            </remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.AddFilter(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a filter to remove a text from extracted data.
            </summary>
            <param name="searchPattern">Search string.</param>
            <param name="caseSensitive">True if should perform the case-sensitive search, otherwise false.</param>
            <param name="useRegex">Treat the search string as the regular expression.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.AddFilter(System.String,System.Int32,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.AddFilter(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="fontColorR">Red component of RGB font color.</param>
            <param name="fontColorG">Green component of RGB font color.</param>
            <param name="fontColorB">Blue component of RGB font color.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.AddFilter(System.String,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="fontColor">Font color.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BaseTextExtractor.ResetFilters">
            <summary>
            Reset text filters.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.BookmarkRemover">
            <summary>
             Represents tool that remove bookmarks from PDF document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.BookmarkRemover.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BookmarkRemover.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BookmarkRemover.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.BookmarkRemover.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BookmarkRemover.#ctor">
            <summary>
             Initializes a new instance of the BookmarkRemover class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BookmarkRemover.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the BookmarkRemover class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BookmarkRemover.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.BookmarkRemover.RemoveBookmarks(System.String,System.String)">
            <summary>
             Removes bookmarks from PDF document.
            </summary>
            <param name="sourceDocument">Source PDF document file name to remove bookmarks.</param>
            <param name="destinationDocument">Output document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.BookmarkRemover.RemoveBookmarks(System.IO.Stream,System.IO.Stream)">
            <summary>
             Removes bookmarks from PDF document.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to remove bookmark.</param>
            <param name="destinationDocumentStream">Output stream for result PDF document .</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentOptimizer">
            <summary>
             Represents PDF document optimizer.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentOptimizer.ProgressEventHandler">
            <summary>
            Defines progress event parameters.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="progress">Progress value from 0 to 100.</param>
            <param name="cancel">Interruption flag. Set it <c>true</c> to interrupt the processing.</param>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentOptimizer.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentOptimizer.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentOptimizer.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentOptimizer.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentOptimizer.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.#ctor">
            <summary>
             Initializes a new instance of DocumentOptimizer class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of DocumentOptimizer class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.OptimizeDocument(System.String,System.String)">
            <summary>
            Optimizes PDF document with default options.
            </summary>
            <param name="sourceFileName">Source PDF file name.</param>
            <param name="destFileName">Destination PDF file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.OptimizeDocument(System.String,System.String,Bytescout.PDFExtractor.OptimizationOptions)">
            <summary>
            Optimizes PDF document.
            </summary>
            <param name="sourceFileName">Source PDF file name.</param>
            <param name="destFileName">Destination PDF file name.</param>
            <param name="options">Optimization options.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.OptimizeDocument(System.IO.Stream,System.IO.Stream)">
            <summary>
            Optimizes PDF document with default options.
            </summary>
            <param name="sourceDocumentStream">Source stream containing PDF document.</param>
            <param name="destinationDocumentStream">Destination stream for compressed PDF document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentOptimizer.OptimizeDocument(System.IO.Stream,System.IO.Stream,Bytescout.PDFExtractor.OptimizationOptions)">
            <summary>
            Optimizes PDF document.
            </summary>
            <param name="sourceDocumentStream">Source stream containing PDF document.</param>
            <param name="destinationDocumentStream">Destination stream for compressed PDF document.</param>
            <param name="options">Optimization options.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.ImageOptimizationFormat">
            <summary>
            Defines image compression types used for image optimization in PDF
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageOptimizationFormat.JPEG">
            <summary>
            JPEG compression.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageOptimizationFormat.Fax">
            <summary>
            CCITT4 compression format used in faxes. Very compact black and white images.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageOptimizationFormat.Flate">
            <summary>
            Flate compression.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.OptimizationOptions">
            <summary>
             Represents PDF document optimizer.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.OptimizationOptions.ImageOptimizationFormat">
            <summary>
            Gets or sets the compression format for image optimization.
            </summary>
            <value>
                <see cref="P:Bytescout.PDFExtractor.OptimizationOptions.ImageOptimizationFormat" /> value defining the image compression format. Default is <c>JPEG</c>.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.OptimizationOptions.JPEGQuality">
            <summary>
            Gets or sets the quality of JPEG compressed images.
            </summary>
            <value>The integer that represents the quality of JPEG compressed images. From 0 (min size) to 100 (max quality). 
            Default is 25 - provides smallest file size with acceptable visual quality for a text.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.OptimizationOptions.ResampleImages">
            <summary>
            Gets or sets whether to resample (resize) high-resolution images. Images with the resolution larger than <see cref="P:Bytescout.PDFExtractor.OptimizationOptions.ResamplingResolution" />
            will be resampled at <see cref="!:ResamplingFactor" />. Default is <c>true</c>.
            Helps to optimize (reduce the file size) PDF documents containing high resolution scanned images (300DPI or more) at the expense of text sharpness.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.OptimizationOptions.ResamplingResolution">
            <summary>
            Resampling resoultion. Default is 120 DPI. All images of higher resolution will be resampled to it.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IBaseTextExtractor">
            <summary>
             Defines a base interface for PDF text extractors.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.XCoordinateToleranceFactor">
            <summary>
            Sets X coordinate tolerance to use when reproducing the structure of PDF page content.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.YCoordinateToleranceFactor">
            <summary>
            Sets Y coordinate tolerance to use when reproducing the structure of PDF page content.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.TableXMinIntersectionRequiredInPercents">
            <summary>
             Structured extraction (CSV, XML, XLS, StructuredExtractor, TextExtractor with PreserveFormatting = true)
             This option controls how much % of the cell's rectangle should intersect (by X coordinate axis) with previous cell to treat both cells belonging to the same column.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.TableYMinIntersectionRequiredInPercents">
            <summary>
            Structured extraction (CSV, XML, XLS, StructuredExtractor, TextExtractor with PreserveFormatting = true)
            This option controls how much % of the cell's rectangle should intersect (by Y coordinate axis) with previous cell to treat both cells belonging to the same row.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.RTLTextAutoDetectionEnabled">
            <summary>
            Enables RTL (Right-To-Left) text auto detection.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractInvisibleText">
            <summary>
            Gets or sets a value indicating whether to extract invisible text from PDF document.
            </summary>
            <value>
                <c>true</c> if extract invisible text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractShadowLikeText">
            <summary>
            Gets or sets a value indicating whether to include characters used to create "shadow" effect (when the same character appears with some offset) from PDF document.
            True by default (includes all encoded characters disregarding their real appearance).
            </summary>
            <value>
                <c>true</c> if extract shadow like characters in text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractAnnotations">
            <summary>
            Gets or sets a value indicating whether to extract text from annotation objects. Default is <c>true</c>.
            </summary>
            <value>
                <c>true</c> if extract annotations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.DetectLinesInsteadOfParagraphs">
            <summary>
             Lines detection option. 
             Obsolete: Use <see cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.LineGroupingMode" /> instead.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.LineGroupingMode">
            <summary>
            When grouping text, each new line of text will start a new group (rather than paragraph grouping)
            Default: None. (no merging is done. Just processing line by line).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ColumnDetectionMode">
            <summary>
            Sets how columns are detected.
            Default: ContentGroupsAndBorders (columns are detected based on content groups and borders (vertical lines)).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.AutoAlignColumnsToHeader">
            <summary>
            Gets or sets a value indicating whether to auto align text in columns while extracting text (with formatting preserved), csv, xml or not.
            True by default (i.e. align text in columns and header).
            False means to not auto align text and try to reproduce the original table.
            </summary>
            <value>
                <c>true</c> if try to auto align text in columns for text (with formatting), csv, xml, xls extraction. Set to <c>false</c> to provide more precise representation of the original table.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.DetectNewColumnBySpacesRatio">
            <summary>
             Space ratio between words.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractColumnByColumn">
            <summary>
            Indicates if we should extract text column by column or should we use the original layout.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.TrimSpaces">
            <summary>
             Trim spaces from text lines (FALSE by default to preserve original formatting if any).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.Unwrap">
            <summary>
             Unwraps lines in columns into one single. 
             True by default
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.RemoveHyphenation">
            <summary>
            Gets or sets a value indicating whether to automatically remove hyphenations in end of lines (works when Unwrap is True).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.PreserveFormattingOnTextExtraction">
            <summary>
            Gets or sets a value indicating whether to preserve the text formatting on the extraction.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.TextEncodingCodePage">
            <summary>
            Sets the text encoding code page by its index.
            Default code page is 1252 (Windows-1252).
            </summary>
            <remarks>You can find the full list of code pages at https://msdn.microsoft.com/en-us/en-en/library/system.text.encodinginfo.codepage(v=vs.110).aspx</remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRMode">
            <summary>
            Recognize text on embedded images using Optical Character Recognition (OCR). Set the language using <c>OCRLanguage</c> property.
            <para>
            This option requires Bytescout.PDFExtractor.OCRExtension.dll assembly and appropriate language files in <c>OCRLanguageDataFolder</c> folder.
            The SDK is shipped with for English, Franch, German and Spanish language files. You can download more at https://github.com/tesseract-ocr/tessdata/tree/3.04.00
            </para></summary>
            <remarks>
            Optical Character Recognition implemented with opensource Tesseract OCR engine: https://github.com/tesseract-ocr 
            </remarks>
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguage" />
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguageDataFolder" />
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRCacheMode" />
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRCacheMode">
            <summary>
            OCR results caching behaviour. 
            Turned off by default (no cache is used).
            In "WholePage" caching mode you may save processing time as the SDK will check if need to re-run OCR on the page
            or can just pull results from previously cached OCR results.
            </summary>
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguage" />
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguageDataFolder" />
            <seealso cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRMode" />
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguageDataFolder">
            <summary>
            Folder containing OCR language data files. The folder can be located anywhere by must be strongly named "tessdata".
            </summary>
            <remarks>
            By default the component expects "tessdata" in the folder containing the executing assembly.
            </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRLanguage">
            <summary>
            Language for Optical Character Recognition (OCR). The valid values are: 
            <list type="bullet"><listheader><term>Value</term><description>Language</description></listheader><item><term>"eng"</term><description>English (default)</description></item><item><term>"deu"</term><description>German</description></item><item><term>"fra"</term><description>French</description></item><item><term>"spa"</term><description>Spanish</description></item><item><term>...</term><description>See more languages at https://github.com/tesseract-ocr/tessdata/tree/3.04.00 </description></item></list></summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRResolution">
            <summary>
            Resolution of Optical Character Recognition (OCR). Default is 300 DPI.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRAutoModeMinExistingTextLength">
            <summary>
            Applies to OCRMode.Auto only:
            Min total length of existing text on current page to decide if OCR should be run or not.
            If the length of text is lesser than this property then library runs OCR for this page.
            Otherwise it extracts the existing text only.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRDetectPageRotation">
            <summary>
            Detect scanned page rotation.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.RotationAngle">
            <summary>
            Gets or sets whether to rotate document pages to specifyed angle before the extraction.
            </summary>
            <remarks>
            Note, this option is ignored if <see cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRDetectPageRotation" /> property enabled.
            </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.OCRImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to the document page before Optical Character Recognition (OCR). May improve the recognition quality.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.IsOCRRecommendedForPage(System.Int32)">
            <summary>
            Detects whether OCR is recommended for specified page. 
            OCR (Optical Character Recognition) is recommended when pages has no text objects bat has an image that might contain text.
            </summary>
            <param name="pageIndex">Page index.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ConsiderFontNames">
            <summary>
            Consider font names in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ConsiderFontSizes">
            <summary>
            Consider font sizes in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ConsiderFontColors">
            <summary>
            Consider font colors in document text when detecting table structure. False by default.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ConsiderVerticalBorders">
            <summary>
            Consider vertical borders colors in document text when detecting table structure and merging text objects. True by default.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.DisposePage(System.Int32)">
            <summary>
            Disposes the page object. 
            Uses this method carefully to destroy the page object that should not be used further.
            Useful to free allocated memory when processing huge PDF documents.
            </summary>
            <param name="pageIndex">Page index.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractionColumns">
            <summary>
            Contains columns detected from last processed document page.
            </summary>
            <value>Array of column coordinates.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseTextExtractor.CustomExtractionColumns">
            <summary>
            Allows to override the automatic columns detection with custom columns.
            </summary>
            <value>Array of column coordinates.</value>
            <remarks>
            Example of use: If you have a document with the same column structure on all pages, 
            you can run the extraction for the first page, take detected columns from it using <see cref="P:Bytescout.PDFExtractor.IBaseTextExtractor.ExtractionColumns" /> 
            property and pass them to CustomExtractionColumns. This will allow to avoid columns varying caused by minor 
            changes in other pages structure and also speed up the extraction.
            </remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.AddFilter(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a filter to remove a text from extracted data.
            </summary>
            <param name="searchPattern">Search string.</param>
            <param name="caseSensitive">True if should perform the case-sensitive search, otherwise false.</param>
            <param name="useRegex">Treat the search string as the regular expression.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.AddFilter(System.String,System.Int32,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.AddFilter(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="fontColorR">Red component of RGB font color.</param>
            <param name="fontColorG">Green component of RGB font color.</param>
            <param name="fontColorB">Blue component of RGB font color.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.AddFilter(System.String,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds filter to exclude text objects with specified attributes.
            </summary>
            <param name="fontName">Font name. Use empty string or null to skip the filtering by the font name.</param>
            <param name="fontSize">Font size. Use -1 to skip the filtering by the font size.</param>
            <param name="fontColor">Font color.</param>
            <param name="exclude">True if should exclude matching content, False if include the matching content.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseTextExtractor.ResetFilters">
            <summary>
            Reset text filters.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IBookmarkRemover">
            <summary>
             Represents tool that remove bookmarks from PDF document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IBookmarkRemover.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBookmarkRemover.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBookmarkRemover.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBookmarkRemover.RemoveBookmarks(System.String,System.String)">
            <summary>
             Removes bookmarks from PDF document.
            </summary>
            <param name="sourceDocument">Source PDF document file name to remove bookmarks.</param>
            <param name="destinationDocument">Output document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBookmarkRemover.RemoveBookmarks(System.IO.Stream,System.IO.Stream)">
            <summary>
             Removes bookmarks from PDF document.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to remove bookmark.</param>
            <param name="destinationDocumentStream">Output stream for result PDF document .</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBookmarkRemover.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, the tool throws exception when the modification is prohibited.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IDocumentOptimizer">
            <summary>
             Represents PDF document optimizer.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentOptimizer.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentOptimizer.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentOptimizer.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentOptimizer.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentOptimizer.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the document modification is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentOptimizer.OptimizeDocument(System.String,System.String)">
            <summary>
            Optimizes PDF document with default options.
            </summary>
            <param name="sourceFileName">Source PDF file name.</param>
            <param name="destFileName">Destination PDF file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentOptimizer.OptimizeDocument(System.String,System.String,Bytescout.PDFExtractor.OptimizationOptions)">
            <summary>
            Optimizes PDF document.
            </summary>
            <param name="sourceFileName">Source PDF file name.</param>
            <param name="destFileName">Destination PDF file name.</param>
            <param name="options">Optimization options.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentOptimizer.OptimizeDocument(System.IO.Stream,System.IO.Stream)">
            <summary>
            Optimizes PDF document with default options.
            </summary>
            <param name="sourceDocumentStream">Source stream containing PDF document.</param>
            <param name="destinationDocumentStream">Destination stream for compressed PDF document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentOptimizer.OptimizeDocument(System.IO.Stream,System.IO.Stream,Bytescout.PDFExtractor.OptimizationOptions)">
            <summary>
            Optimizes PDF document.
            </summary>
            <param name="sourceDocumentStream">Source stream containing PDF document.</param>
            <param name="destinationDocumentStream">Destination stream for compressed PDF document.</param>
            <param name="options">Optimization options.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IOptimizationOptions">
            <summary>
             Represents PDF document optimizer.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IOptimizationOptions.ImageOptimizationFormat">
            <summary>
            Gets or sets the compression format for image optimization.
            </summary>
            <value>
                <see cref="P:Bytescout.PDFExtractor.IOptimizationOptions.ImageOptimizationFormat" /> value defining the image compression format. Default is <c>JPEG</c>.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IOptimizationOptions.JPEGQuality">
            <summary>
            Gets or sets the quality of JPEG compressed images.
            </summary>
            <value>The integer that represents the quality of JPEG compressed images. From 0 (min size) to 100 (max quality). 
            Default is 25 - provides smallest file size with acceptable visual quality for a text.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IOptimizationOptions.ResampleImages">
            <summary>
            Gets or sets whether to resample (resize) high-resolution images. Images with the resolution larger than <see cref="P:Bytescout.PDFExtractor.IOptimizationOptions.ResamplingResolution" />
            will be resampled at <see cref="!:ResamplingFactor" />. Default is <c>true</c>.
            Helps to optimize (reduce the file size) PDF documents containing high resolution scanned images (300DPI or more) at the expense of text sharpness.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IOptimizationOptions.ResamplingResolution">
            <summary>
            Resampling resoultion. Default is 120 DPI. All images of higher resolution will be resampled to it.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddDeskew">
            <summary>
            Adds deskew image processing filter with default angle threshold 0.4 deg (minimal admissible skew angle).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddDeskew(System.Double)">
            <summary>
            Adds deskew image processing filter with specified angle threshold (minimal admissible skew angle).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddDilate">
            <summary>
            Adds dilate image processing filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddVerticalLinesRemover">
            <summary>
            Adds vertical lines remover filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddHorizontalLinesRemover">
            <summary>
            Adds horizontal lines remover filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddMedian">
            <summary>
            Adds median image processing filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddMedian(System.Int32)">
            <summary>
            Adds median filter with specified block size.
            </summary>
            <param name="blockSize">Block size of the median filter. Default is 3.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddGammaCorrection">
            <summary>
            Adds gamma correction filter with default value 1.4.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddGammaCorrection(System.Double)">
            <summary>
            Adds gamma correction filter.
            </summary>
            <param name="gamma">Gamma correction value. Best result provided by values between 1.25 to 1.7.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImagePreprocessingFiltersCollection.AddContrast(System.Int32)">
            <summary>
            Adds contrast image processing  filter.
            </summary>
            <param name="contrast">Contrast value from -100 to 100. Default is 0 (no contrast adjustment).</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection">
            <summary>
            Collection of image preprocessing filters.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddDeskew">
            <summary>
            Adds deskew image processing filter with default angle threshold 0.4 deg (minimal admissible skew angle).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddDeskew(System.Double)">
            <summary>
            Adds deskew image processing filter with specified angle threshold (minimal admissible skew angle).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddDilate">
            <summary>
            Adds dilate image processing filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddVerticalLinesRemover">
            <summary>
            Adds vertical lines remover filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddHorizontalLinesRemover">
            <summary>
            Adds horizontal lines remover filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddMedian">
            <summary>
            Adds median image processing filter.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddMedian(System.Int32)">
            <summary>
            Adds median filter with specified block size.
            </summary>
            <param name="blockSize">Block size of the median filter. Default is 3.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddGammaCorrection">
            <summary>
            Adds gamma correction filter with default value 1.4.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddGammaCorrection(System.Double)">
            <summary>
            Adds gamma correction filter.
            </summary>
            <param name="gamma">Gamma correction value. Best result provided by values between 1.25 to 1.7.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImagePreprocessingFiltersCollection.AddContrast(System.Int32)">
            <summary>
            Adds contrast image processing  filter.
            </summary>
            <param name="contrast">Contrast value from -100 to 100. Default is 0 (no contrast adjustment).</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IRemover">
            <summary>
             Defines a class for PDF extractors.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.GetObjectRectangleFromPoint(System.Int32,System.Drawing.PointF)">
            <summary>
            Returns bounding rectangle of text object located at the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <returns>Bounding object rectangle.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Removes text object containing the specified text.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="text">Text to search.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if the search string was found, <c>false</c> otherwise.</returns>
            <remarks>Note, the removed text might be larger than the found string. The current version is able to remove
            only the whole PDF text object containing the search string.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.String,System.Boolean,System.IO.Stream)">
            <summary>
            Removes text object containing the specified text.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="text">Text to search.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if the search string was found, <c>false</c> otherwise.</returns>
            <remarks>Note, the removed text might be larger than the found string. Currently the Remover is able 
            to remove only the whole PDF text object containing the search string.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.Drawing.RectangleF,System.String)">
            <summary>
            Removes all text objects located in or intersecting the specified rectangle.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than the specified rectangle. Currently the Remover is unable 
            to split PDF text objects.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.Drawing.RectangleF,System.IO.Stream)">
            <summary>
            Removes all text objects located in or intersecting the specified rectangle.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than the specified rectangle. Currently the Remover is unable 
            to split PDF text objects.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.Drawing.PointF,System.String)">
            <summary>
            Removes text object located in the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than a word located in the specified point. Currently the Remover is able 
            to remove only the whole PDF text object containing the word.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(System.Int32,System.Drawing.PointF,System.IO.Stream)">
            <summary>
            Removes text object located in the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than a word located in the specified point. Currently the Remover is able 
            to remove only the whole PDF text object containing the word.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(Bytescout.PDFExtractor.ISearchResult,System.String)">
            <summary>
            Removes the text by the search result got from TextExtractor.Find() method.
            </summary>
            <param name="searchRes">The search result.</param>
            <param name="fileName">Output file name to save the edited document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IRemover.RemoveText(Bytescout.PDFExtractor.ISearchResult,System.IO.Stream)">
            <summary>
            Removes the text by the search result got from TextExtractor.Find() method.
            </summary>
            <param name="searchRes">The search result.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IStamper">
            <summary>
            Interface of Stamper utility class. Allows you to add a stamp or sign picture to PDF document pages.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IStamper.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IStamper.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IStamper.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IStamper.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IStamper.MakeStampImageTransparent">
            <summary>
            Makes opaque stamp images transparent taking top-left pixel as transparency color.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.String,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFile">Image file path.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.String[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.String,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFile">Image file path.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.String[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.Drawing.Image,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.Drawing.Image[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.Drawing.Image,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.String,System.String,System.Drawing.Image[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.String,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFile">Image file path.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.String[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.String,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFile">Image file path.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.String[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)">
            <summary>
            Gets images size in document points.
            </summary>
            <param name="imageFile">Image file path.</param>
            <returns>Image size in document points (1/72").</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.Drawing.Image)">
            <summary>
            Gets images size in document points.
            </summary>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <returns>Image size in document points (1/72").</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.EmbeddedImageFormat">
            <summary>
            Image format to convert PDF pages to.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IUnsearchablePDFMaker.RenderingResolution">
            <summary>
             Gets or sets PDF page rendering resolution. Larger resoultion - larger output document, but better visual quality.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IUnsearchablePDFMaker.ImageFormat">
            <summary>
            Image format to convert PDF pages to.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IUnsearchablePDFMaker.JPEGQuality">
            <summary>
            Gets or sets the quality for JPEG image format.
            </summary>
            <value>The integer that represents the quality of JPEG output images. From 0 (min size) to 100 (max quality). Default is 80.</value>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.String)">
            <summary>
            Replaces all PDF document pages with rendered images making the document not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.String,System.Int32)">
            <summary>
            Replaces specified PDF document page with rendered image making it not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.String,System.Int32,System.Int32)">
            <summary>
            Replaces specified PDF document pages with rendered images making them not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream)">
            <summary>
            Replaces all PDF document pages with rendered images making the document not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream,System.Int32)">
            <summary>
            Replaces specified PDF document page with rendered image making it not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IUnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Replaces specified PDF document pages with rendered images making them not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.OCRLanguageDataFolder">
            <summary>
            Folder containing OCR language data files. The folder can be located anywhere by must be strongly named "tessdata".
            </summary>
            <remarks>
            By default the component expects "tessdata" in the folder containing the executing assembly.
            </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.OCRLanguage">
            <summary>
            Language for Optical Character Recognition (OCR). The valid values are: 
            <list type="bullet"><listheader><term>Value</term><description>Language</description></listheader><item><term>"eng"</term><description>English (default)</description></item><item><term>"deu"</term><description>German</description></item><item><term>"fra"</term><description>French</description></item><item><term>"spa"</term><description>Spanish</description></item><item><term>...</term><description>See more languages at https://github.com/tesseract-ocr/tessdata/tree/3.04.00 </description></item></list></summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.OCRResolution">
            <summary>
            Resolution of Optical Character Recognition (OCR). Default is 300 DPI.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.OCRDetectPageRotation">
            <summary>
            Detect scanned page rotation.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.LabelingFont">
            <summary>
            Font used to put invisible text. By default "Helvetica" used, but this font does not contain Unicode character ranges.
            If you process document containing Chinese, Japanese, Korean characters (or any other Unicode charsets) you should set 
            the font name containing required characters, for example, "Arial Unicode MS", "Microsoft JhengHei", etc.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.DiscardExistingDocumentText">
            <summary>
            Gets or sets whether to discard any existing text in the document. Default is <c>false</c> (combine the recognized text with existing content).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchablePDFMaker.OCRImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to the document page before Optical Character Recognition (OCR). May improve the recognition quality.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.String)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.String,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.String,System.Int32,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.IO.Stream)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.IO.Stream,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.MakePDFSearchable(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized characters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchablePDFMaker.GetPageOCRCells(System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds returns recognized data as array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.
            </summary>
            <param name="pageIndex">Page index to process.</param>
            <returns>Array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.IMultimediaExtractor">
            <summary>
             Defines the video extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetDocumentAudioCount">
            <summary>
             Returns count of audioes in the document.
            </summary>
            <returns>Count of audioes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetDocumentVideoCount">
            <summary>
             Returns count of videos in the document.
            </summary>
            <returns>Count of videos.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetFirstAudio">
            <summary>
             Initializes enumeration of audioes in the document. If GetFirstVideo() returned true, you can get
             the video using SaveCurrentAudio*() or GetCurrentAudio*() methods.
            </summary>
            <returns>False if no audioes in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetFirstVideo">
            <summary>
             Initializes enumeration of videos in the document. If GetFirstVideo() returned true, you can get
             the video using SaveCurrentVideo*() or GetCurrentVideo*() methods.
            </summary>
            <returns>False if no videos in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetNextAudio">
            <summary>
             Advances audio enumeration to next video. If GetNextAudio() returned true, you can get
             the video using SaveCurrentAudio*() or GetCurrentAudio*() methods.
            </summary>
            <returns>False if no more audioes in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetNextVideo">
            <summary>
             Advances video enumeration to next video. If GetNextVideo() returned true, you can get
             the video using SaveCurrentVideo*() or GetCurrentVideo*() methods.
            </summary>
            <returns>False if no more videos in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentAudioType">
            <summary>
            Gets the type of the current audio.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException">Unknown type of audio.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentVideoType">
            <summary>
            Gets the type of the current video.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException">Unknown type of video.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentAudioExtension">
            <summary>
            Gets the current audio extension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentVideoExtension">
            <summary>
            Gets the current video extension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.SaveCurrentAudioToFile(System.String)">
            <summary>
             Saves current audio to file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.SaveCurrentVideoToFile(System.String)">
            <summary>
             Saves current video to file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.SaveCurrentAudioToStream(System.IO.Stream)">
            <summary>
             Saves current audio to provided stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.SaveCurrentVideoToStream(System.IO.Stream)">
            <summary>
             Saves current video to provided stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentAudioBytesSize">
            <summary>
             Returns size of current audio.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentVideoBytesSize">
            <summary>
             Returns size of current video.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentAudioAsArrayOfBytes">
            <summary>
             Returns current audio as array of bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IMultimediaExtractor.GetCurrentVideoAsArrayOfBytes">
            <summary>
             Returns current video as array of bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.IXFDFExtractor">
            <summary>
             Defines the PDF to XML extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.GetXFDFDocument">
            <summary>
             Extracts forms data in XFDF format from whole PDF document.
            </summary>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.GetXFDFDocument(System.Int32,System.Int32)">
            <summary>
             Extracts forms data in XFDF format from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.GetXFDF">
            <summary>
             Extracts forms data in XFDF format from whole PDF document.
            </summary>
            <returns>XFDF string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.GetXFDF(System.Int32,System.Int32)">
            <summary>
             Extracts forms data in XFDF format from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XFDF string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.SaveXFDFToFile(System.String)">
            <summary>
             Saves forms data in XFDF format to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.SaveXFDFToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves forms data in XFDF format from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.SaveXFDFToStream(System.IO.Stream)">
            <summary>
             Saves forms data in XFDF format to stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFDFExtractor.SaveXFDFToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves forms data in XFDF format from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IJSONExtractor">
            <summary>
             Defines the PDF to JSON extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IJSONExtractor.SaveImages">
            <summary>
            Get or sets the image saving way: do not save; save to outer file; embed into result JSON as Base64 string. Default is <c>ImageHandling.None</c>.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IJSONExtractor.ImageFolder">
            <summary>
            Gets or sets the folder to put extracted images when <see cref="P:Bytescout.PDFExtractor.JSONExtractor.SaveImages" /> property is set to <c>ImageHandling.OuterFile</c>. 
            Default is "images" - the extractor will create "images" sub-folder in the same folder with output JSON file.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IJSONExtractor.ImageFormat">
            <summary>
            Gets or sets the image format for extracted images. Default is PNG.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IJSONExtractor.KeepOriginalFontNames">
            <summary>
            By default JSONExtractor replaces names of embedded fonts with standard (or "descendant") fonts similar by metrics and typeface.
            This is because embedded fonts differ from fonts installed into your system or absent there at all.
            Set this property to <c>true</c> if you want to keep the original font names.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IJSONExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.GetJSONData">
            <summary>
             Extracts data from whole document as JSON string.
            </summary>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.GetJSONData(System.Int32,System.Int32)">
            <summary>
             Extracts data from specified page range as JSON string.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.GetJSONData(System.Int32)">
            <summary>
             Extracts data from specified document page as JSON string.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToFile(System.String)">
            <summary>
             Saves extracted data to file in JSON format.
            </summary>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves extracted data from specified page range to file in JSON format.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToFile(System.Int32,System.String)">
            <summary>
             Saves extracted data from specified page to file in JSON format.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToStream(System.IO.Stream)">
            <summary>
             Saves extracted data to stream in JSON format.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves extracted data from specified page range to stream in JSON format.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IJSONExtractor.SaveJSONToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves extracted data from specified page to stream in JSON format.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.PasswordEventHandler">
            <summary>
            Represents parameters for PasswordRequired event.
            </summary>
            <param name="sender"></param>
            <param name="document"></param>
            <param name="password"></param>
        </member>
        <member name="T:Bytescout.PDFExtractor.Remover">
            <summary>
            Utility class to remove objects from PDF document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.Remover.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.Password">
            <summary>
             PDF document owner password.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.Version">
            <summary>
             Gets the component version number.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.PageDataCaching">
            <summary>
            Controls page data caching behavior.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.ContentType">
            <summary>
            Returns content type of PDF document: normal document, portfolio or XFA form.
            To extract files from PDF portfolio use AttachmentExtractor class.
            To extract XFA form content use XFAFormExtractor class.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.EmbeddedFileCount">
            <summary>
            Returns number of embedded files (or attachments if any).
            Files can be attached as "attachments" or embedded into PDf if the PDF is a "portfolio" file.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Remover.IsDocumentLoaded">
            <summary>
            Get the document loaded state.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.#ctor">
            <summary>
             Initializes a new instance of the Remover class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the Remover class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.Reset">
            <summary>
             Resets the instance and disposes internal resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.LoadDocumentFromFile(System.String)">
            <summary>
             Loads PDF document from specified file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="documentFileStream">Input stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageCount">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRotationAngle(System.Int32)">
            <summary>
            Returns the rotation angle of specified page.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Rotation angle in degrees.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRectangle(System.Int32)">
            <summary>
            Gets the page rectangle.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRect_Left(System.Int32)">
            <summary>
            Gets the specified page left coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Left coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRect_Top(System.Int32)">
            <summary>
            Gets the specified page top coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Top coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRect_Width(System.Int32)">
            <summary>
            Gets the specified page width.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page width in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetPageRect_Height(System.Int32)">
            <summary>
            Gets the specified page height.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page height in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.IsEncrypted">
            <summary>
             Gets the document encrypted state.
            </summary>
            <returns>Encryption state.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.GetObjectRectangleFromPoint(System.Int32,System.Drawing.PointF)">
            <summary>
            Returns bounding rectangle of text object located at the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <returns>Bounding object rectangle.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Removes text object containing the specified text.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="text">Text to search.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if the search string was found, <c>false</c> otherwise.</returns>
            <remarks>Note, the removed text might be larger than the found string. The current version is able to remove
            only the whole PDF text object containing the search string.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.String,System.Boolean,System.IO.Stream)">
            <summary>
            Removes text object containing the specified text.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="text">Text to search.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if the search string was found, <c>false</c> otherwise.</returns>
            <remarks>Note, the removed text might be larger than the found string. The current version is able to remove
            only the whole PDF text object containing the search string.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.Drawing.RectangleF,System.String)">
            <summary>
            Removes all text objects located in or intersecting the specified rectangle.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than the specified rectangle. Currently the Remover is unable 
            to split PDF text objects.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.Drawing.RectangleF,System.IO.Stream)">
            <summary>
            Removes all text objects located in or intersecting the specified rectangle.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than the specified rectangle. Currently the Remover is unable 
            to split PDF text objects.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.Drawing.PointF,System.String)">
            <summary>
            Removes text object located in the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <param name="fileName">Output file name to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than a word located in the specified point. Currently the Remover is able 
            to remove only the whole PDF text object containing the word.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(System.Int32,System.Drawing.PointF,System.IO.Stream)">
            <summary>
            Removes text object located in the specified point.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="point">The point.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
            <returns>
                <c>True</c> if any text has been removed, <c>false</c> otherwise.</returns>
            <remarks>Note, The removed text might be larger than a word located in the specified point. Currently the Remover is able 
            to remove only the whole PDF text object containing the word.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(Bytescout.PDFExtractor.ISearchResult,System.String)">
            <summary>
            Removes the text by the search result got from TextExtractor.Find() method.
            </summary>
            <param name="searchRes">The search result.</param>
            <param name="fileName">Output file name to save the edited document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Remover.RemoveText(Bytescout.PDFExtractor.ISearchResult,System.IO.Stream)">
            <summary>
            Removes the text by the search result got from TextExtractor.Find() method.
            </summary>
            <param name="searchRes">The search result.</param>
            <param name="outputStream">Output stream to save the edited document.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.RotationAngle">
            <summary>
            Represents angle for document rotation.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.RotationAngle.None">
            <summary>
            No rotation.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.RotationAngle.Deg90">
            <summary>
            90 degrees rotation.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.RotationAngle.Deg180">
            <summary>
            180 degrees rotation.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.RotationAngle.Deg270">
            <summary>
            270 degrees rotation.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.Stamper">
            <summary>
            Stamps PDF document with an image.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.Stamper.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Stamper.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Stamper.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Stamper.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.Stamper.MakeStampImageTransparent">
            <summary>
            Makes opaque stamp images transparent taking top-left pixel as transparency color.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.#ctor">
            <summary>
             Initializes a new instance of Stamper class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of Stamper class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.String,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFile">Image file path.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.String[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.String,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFile">Image file path.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.String[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.Drawing.Image,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.Drawing.Image[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.Drawing.Image,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.String,System.String,System.Drawing.Image[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocument">Source PDF document file name to process.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.String,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFile">Image file path.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.String[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.String,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFile">Image file path.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.String[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="imageFiles">Array of image files.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image,System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="point">Image location (upper-left corner) in document points (1/72"). The width and height will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image[],System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with multiple images. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="points">Image locations (upper-left corners) in document points (1/72"). The widths and heights will be computed according to the image resolution.</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image,System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <param name="rectangle">Image rectangle in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.Stamp(System.IO.Stream,System.IO.Stream,System.Drawing.Image[],System.Drawing.RectangleF[],System.Int32,System.Int32)">
            <summary>
            Stamps specified PDF document pages with image. 
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to process.</param>
            <param name="destinationDocumentStream">Output stream for processed PDF document .</param>
            <param name="images">Array of <see cref="T:System.Drawing.Image" /> objects.</param>
            <param name="rectangles">Array of image rectangles in document points (1/72").</param>
            <param name="startPageIndex">Zero-based index of the start page to stamp.</param>
            <param name="endPageIndex">Zero-based index of the end page to stamp. Use -1 to specify "to the end of document".</param>
            <seealso cref="M:Bytescout.PDFExtractor.IStamper.GetImageSizeInPoints(System.String)" />
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.GetImageSizeInPoints(System.String)">
            <summary>
            Gets images size in document points.
            </summary>
            <param name="imageFile">Image file path.</param>
            <returns>Image size in document points (1/72").</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.Stamper.GetImageSizeInPoints(System.Drawing.Image)">
            <summary>
            Gets images size in document points.
            </summary>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object.</param>
            <returns>Image size in document points (1/72").</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.TextComparer">
            <summary>
            Represents PDF text comparer.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.TextComparer.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.ChangedInPercents">
            <summary>
            Count of changes in percents.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.AreEqual">
            <summary>
            Gets whether the documents equal.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.LinesAddedCount">
            <summary>
            Count of lines added.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.LinesRemovedCount">
            <summary>
            Count of lines removed.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.LinesChangedCount">
            <summary>
            Count of lines changed (modified).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextComparer.TimeSpent">
            <summary>
            Processing time.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TextComparer" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TextComparer" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(System.String,System.String)">
            <summary>
            Compares two PDF documents.
            </summary>
            <param name="firstFilePath">The first file path.</param>
            <param name="secondFilePath">The second file path.</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Compares two PDF documents.
            </summary>
            <param name="firstFilePath">The first file path.</param>
            <param name="secondFilePath">The second file path.</param>
            <param name="startPage">The start page index (zero-based).</param>
            <param name="endPage">The end page index (zero-based). Use -1 for "to the end of document".</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compares two PDF documents.
            </summary>
            <param name="firstFileStream">The first stream containing PDF document.</param>
            <param name="secondFileStream">The second stream containing PDF document.</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(System.IO.Stream,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Compares two PDF documents.
            </summary>
            <param name="firstFileStream">The first stream containing PDF document.</param>
            <param name="secondFileStream">The second stream containing PDF document.</param>
            <param name="startPage">The start page index (zero-based).</param>
            <param name="endPage">The end page index (zero-based). Use -1 for "to the end of document".</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(Bytescout.PDFExtractor.BaseTextExtractor,Bytescout.PDFExtractor.BaseTextExtractor)">
            <summary>
            Compares two PDF documents loaded into an extractor instance. 
            Supports <see cref="T:Bytescout.PDFExtractor.TextExtractor" />, <see cref="T:Bytescout.PDFExtractor.CSVExtractor" />, <see cref="T:Bytescout.PDFExtractor.XMLExtractor" /> and <see cref="T:Bytescout.PDFExtractor.JSONExtractor" /> as the input.
            </summary>
            <param name="firstDocument">The first document.</param>
            <param name="secondDocument">The second document.</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.Compare(Bytescout.PDFExtractor.BaseTextExtractor,Bytescout.PDFExtractor.BaseTextExtractor,System.Int32,System.Int32)">
            <summary>
            Compares two PDF documents loaded into an extractor instance. 
            Supports <see cref="T:Bytescout.PDFExtractor.TextExtractor" />, <see cref="T:Bytescout.PDFExtractor.CSVExtractor" />, <see cref="T:Bytescout.PDFExtractor.XMLExtractor" /> and <see cref="T:Bytescout.PDFExtractor.JSONExtractor" /> as the input.
            </summary>
            <param name="firstDocument">The first document.</param>
            <param name="secondDocument">The second document.</param>
            <param name="startPage">The start page index (zero-based).</param>
            <param name="endPage">The end page index (zero-based). Use -1 for "to the end of document".</param>
            <returns>Number of changes in percents.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.GenerateHtmlReport(System.String)">
            <summary>
            Generates the comparison report in HTML format.
            </summary>
            <param name="filePath">Destination HTML file path.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.GenerateHtmlReport(System.IO.Stream)">
            <summary>
            Generates the comparison report in HTML format.
            </summary>
            <param name="stream">Destination stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.GenerateTextReport(System.String)">
            <summary>
            Generates the comparison report in plain text format.
            </summary>
            <param name="filePath">Destination text file path.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.GenerateTextReport(System.IO.Stream)">
            <summary>
            Generates the comparison report in plain text format.
            </summary>
            <param name="stream">Destination stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextComparer.GetChanges(Bytescout.PDFExtractor.TextComparer.ChangeType)">
            <summary>
            Returns list of changes in the form convenient for further processing.
            </summary>
            <param name="changesTypesToInclude">Filter of changes.</param>
            <returns>List of <see cref="T:Bytescout.PDFExtractor.TextComparer.DiffPiece" /> objects.</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.UnsearchablePDFMaker">
            <summary>
             Represents Unsearchable PDF Maker tool.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.UnsearchablePDFMaker.RenderingResolution">
            <summary>
             Gets or sets PDF page rendering resolution. Larger resoultion - larger output document, but better visual quality.
            </summary>
            <value>Resoultion value. Default is 150 DPI.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.UnsearchablePDFMaker.ImageFormat">
            <summary>
            Image format to convert PDF pages to.
            </summary>
            <value>Image format. Default is PNG.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.UnsearchablePDFMaker.JPEGQuality">
            <summary>
            Gets or sets the quality for JPEG image format.
            </summary>
            <value>The integer that represents the quality of JPEG output images. From 0 (min size) to 100 (max quality). Default is 80.</value>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.Reset">
            <summary>
             Resets the instance and disposes internal resources. Also automatically invoked by <see cref="M:Bytescout.PDFExtractor.BaseExtractor.Dispose" />.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.String)">
            <summary>
            Replaces all PDF document pages with rendered images making the document not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.String,System.Int32)">
            <summary>
            Replaces specified PDF document page with rendered image making it not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.String,System.Int32,System.Int32)">
            <summary>
            Replaces specified PDF document pages with rendered images making them not suitable for text searching.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream)">
            <summary>
            Replaces all PDF document pages with rendered images making the document not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream,System.Int32)">
            <summary>
            Replaces specified PDF document page with rendered image making it not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.UnsearchablePDFMaker.MakePDFUnsearchable(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Replaces specified PDF document pages with rendered images making them not suitable for text searching
            and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.SearchablePDFMaker">
            <summary>
             Represents Searchable PDF Maker tool.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRLanguageDataFolder">
            <summary>
            Folder containing OCR language data files. The folder can be located anywhere by must be strongly named "tessdata".
            </summary>
            <remarks>
            By default the component expects "tessdata" in the folder containing the executing assembly.
            </remarks>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRLanguage">
            <summary>
            Language for Optical Character Recognition (OCR). The valid values are: 
            <list type="bullet"><listheader><term>Value</term><description>Language</description></listheader><item><term>"eng"</term><description>English (default)</description></item><item><term>"deu"</term><description>German</description></item><item><term>"fra"</term><description>French</description></item><item><term>"spa"</term><description>Spanish</description></item><item><term>...</term><description>See more languages at https://github.com/tesseract-ocr/tessdata/tree/3.04.00 </description></item></list></summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRResolution">
            <summary>
            Resolution of Optical Character Recognition (OCR). Default is 300 DPI.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRAutoModeMinExistingTextLength">
            <summary>
            Applies to OCRMode.Auto only:
            Min total length of existing text on current page to decide if OCR should be run or not.
            If the length of text is lesser than this property then library runs OCR for this page.
            Otherwise it extracts the existing text only.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to the document page before Optical Character Recognition (OCR). May improve the recognition quality.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.OCRDetectPageRotation">
            <summary>
            Detect scanned page rotation.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.LabelingFont">
            <summary>
            Font used to put invisible text. By default "Helvetica" used, but this font does not contain Unicode character ranges.
            If you process document containing Chinese, Japanese, Korean characters (or any other Unicode charsets) you should set 
            the font name containing required characters, for example, "Arial Unicode MS", "Microsoft JhengHei", etc.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchablePDFMaker.DiscardExistingDocumentText">
            <summary>
            Gets or sets whether to discard any existing text in the document. Default is <c>false</c> (combine the recognized text with existing content).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.#ctor">
            <summary>
             Initializes a new instance of SearchablePDFMaker class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of SearchablePDFMaker class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.Reset">
            <summary>
             Resets the instance and disposes internal resources. Also automatically invoked by <see cref="M:Bytescout.PDFExtractor.BaseExtractor.Dispose" />.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.String)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.String,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.String,System.Int32,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result as new PDF file.
            </summary>
            <param name="outputFileName">Output file name.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.IO.Stream)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.IO.Stream,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="pageIndex">Page index to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.MakePDFSearchable(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), adds the recognized charachters 
            as invisible text over the images and saves the result to specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="outputStream">Output stream.</param>
            <param name="startPage">Start page of page range to process.</param>
            <param name="endPage">End page of page range to process.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.GetPageOCRCells(System.Int32,System.Int32@)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), and returns recognized data as array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.
            </summary>
            <param name="pageIndex">Page index to process.</param>
            <param name="detectedPageRotation">Return detected page rotation angle if OCRDetectPageRotation property is <c>true</c>.</param>
            <returns>Array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchablePDFMaker.GetPageOCRCells(System.Int32)">
            <summary>
            Processes the document with OCR (Optical Character Recognition), and returns recognized data as array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.
            </summary>
            <param name="pageIndex">Page index to process.</param>
            <returns>Array of <see cref="T:Bytescout.PDFExtractor.OCRCell" />.</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.OCRCell">
            <summary>
            Represents OCR cell (word) data.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.VideoType">
            <summary>
            Defines embedded video resource types.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.AudioType">
            <summary>
            Defines embedded audio resource types.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.MultimediaExtractor">
            <summary>
             Extracts videos from PDF document.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.MultimediaExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.MultimediaExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.Reset">
            <summary>
             Resets the <see cref="T:Bytescout.PDFExtractor.MultimediaExtractor" /> instance and disposes internal resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="documentFileStream">Input stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetDocumentAudioCount">
            <summary>
             Returns count of audioes in the document.
            </summary>
            <returns>Count of audioes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetDocumentVideoCount">
            <summary>
             Returns count of videos in the document.
            </summary>
            <returns>Count of videos.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetFirstAudio">
            <summary>
             Initializes enumeration of audioes in the document. If GetFirstVideo() returned true, you can get
             the video using SaveCurrentAudio*() or GetCurrentAudio*() methods.
            </summary>
            <returns>False if no audioes in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetFirstVideo">
            <summary>
             Initializes enumeration of videos in the document. If GetFirstVideo() returned true, you can get
             the video using SaveCurrentVideo*() or GetCurrentVideo*() methods.
            </summary>
            <returns>False if no videos in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetNextAudio">
            <summary>
             Advances audio enumeration to next video. If GetNextAudio() returned true, you can get
             the video using SaveCurrentAudio*() or GetCurrentAudio*() methods.
            </summary>
            <returns>False if no more audioes in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetNextVideo">
            <summary>
             Advances video enumeration to next video. If GetNextVideo() returned true, you can get
             the video using SaveCurrentVideo*() or GetCurrentVideo*() methods.
            </summary>
            <returns>False if no more videos in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentAudioType">
            <summary>
            Gets the type of the current audio.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException">Unknown type of audio.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentVideoType">
            <summary>
            Gets the type of the current video.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException">Unknown type of video.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentAudioExtension">
            <summary>
            Gets the current audio extension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentVideoExtension">
            <summary>
            Gets the current video extension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.SaveCurrentAudioToFile(System.String)">
            <summary>
             Saves current audio to file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.SaveCurrentVideoToFile(System.String)">
            <summary>
             Saves current video to file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.SaveCurrentAudioToStream(System.IO.Stream)">
            <summary>
             Saves current audio to provided stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.SaveCurrentVideoToStream(System.IO.Stream)">
            <summary>
             Saves current video to provided stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentAudioBytesSize">
            <summary>
             Returns size of current audio.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentVideoBytesSize">
            <summary>
             Returns size of current video.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentAudioAsArrayOfBytes">
            <summary>
             Returns current audio as array of bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.MultimediaExtractor.GetCurrentVideoAsArrayOfBytes">
            <summary>
             Returns current video as array of bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.XFDFExtractor">
            <summary>
             Represents forms data extractor in XFDF (XML Forms Data Format) format.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XFDFExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XFDFExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.GetXFDFDocument">
            <summary>
             Extracts forms data in XFDF format from whole PDF document.
            </summary>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.GetXFDFDocument(System.Int32,System.Int32)">
            <summary>
             Extracts forms data in XFDF format from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.GetXFDF">
            <summary>
             Extracts forms data in XFDF format from whole PDF document.
            </summary>
            <returns>XFDF string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.GetXFDF(System.Int32,System.Int32)">
            <summary>
             Extracts forms data in XFDF format from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XFDF string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.SaveXFDFToFile(System.String)">
            <summary>
             Saves forms data in XFDF format to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.SaveXFDFToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves forms data in XFDF format from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.SaveXFDFToStream(System.IO.Stream)">
            <summary>
             Saves forms data in XFDF format to stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFDFExtractor.SaveXFDFToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves forms data in XFDF format from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentRotator">
            <summary>
             Represents PDF document rotator.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentRotator.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentRotator.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentRotator.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentRotator.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.#ctor">
            <summary>
             Initializes a new instance of the DocumentRotator class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the DocumentRotator class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.Rotate(System.String,System.String,Bytescout.PDFExtractor.RotationAngle)">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocument">Source PDF document file name to rotate.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="angle">Rotation angle.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.Rotate(System.String,System.String,System.Collections.Generic.IList{Bytescout.PDFExtractor.DocumentRotator.PageAndAngle})">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocument">Source PDF document file name to rotate.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="rotationInfo">List of page index and rotation angle pairs. Page indexes are zero-based.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.Rotate(System.IO.Stream,System.IO.Stream,Bytescout.PDFExtractor.RotationAngle)">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to rotate.</param>
            <param name="destinationDocumentStream">Output stream for rotated PDF document .</param>
            <param name="angle">Rotation angle.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentRotator.Rotate(System.IO.Stream,System.IO.Stream,System.Collections.Generic.IList{Bytescout.PDFExtractor.DocumentRotator.PageAndAngle})">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to rotate.</param>
            <param name="destinationDocumentStream">Output stream for rotated PDF document .</param>
            <param name="rotationInfo">List of page index and rotation angle pairs. Page indexes are zero-based.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IAttachmentInfo">
            <summary>
            Defines various attachment information.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.FileName">
            <summary>
            Filename for the attachment.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.FileNameUnicode">
            <summary>
            Unicode Filename for the attachment.
            (optional)
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Date">
            <summary>
            Date of the attachment (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.DateModified">
            <summary>
            Date modified (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.DateCreated">
            <summary>
            Date created (optional).
            Default DateTime.MinValue means undefined.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.FolderLocation">
            <summary>
            Folder location (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.To">
            <summary>
            To field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.CC">
            <summary>
            CC field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.From">
            <summary>
            From field (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.SubjectPrefix">
            <summary>
            Subject prefix, e.g. "RE: " (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Subject">
            <summary>
            Subject (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.GUID">
            <summary>
            GUID (unique id) (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Importance">
            <summary>
            Importance, e.g. "High" (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Order">
            <summary>
            Order (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Subtype">
            <summary>
            Subtype based on MIME types, e.g. "application/pdf" (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Description">
            <summary>
            Description (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.DisplayName">
            <summary>
            Display name  (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Summary">
            <summary>
            Summary (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.FileSize">
            <summary>
            File size (optional).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentInfo.Thumbnail">
            <summary>
            Thumbnail (preview of the attachment) (optional).
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IDocumentRotator">
            <summary>
             Represents PDF document rotator.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentRotator.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentRotator.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentRotator.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentRotator.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentRotator.Rotate(System.String,System.String,Bytescout.PDFExtractor.RotationAngle)">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocument">Source PDF document file name to rotate.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="angle">Rotation angle.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentRotator.Rotate(System.String,System.String,System.Collections.Generic.IList{Bytescout.PDFExtractor.DocumentRotator.PageAndAngle})">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocument">Source PDF document file name to rotate.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="rotationInfo">List of page index and rotation angle pairs. Page indexes are zero-based.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentRotator.Rotate(System.IO.Stream,System.IO.Stream,Bytescout.PDFExtractor.RotationAngle)">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to rotate.</param>
            <param name="destinationDocumentStream">Output stream for rotated PDF document .</param>
            <param name="angle">Rotation angle.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentRotator.Rotate(System.IO.Stream,System.IO.Stream,System.Collections.Generic.IList{Bytescout.PDFExtractor.DocumentRotator.PageAndAngle})">
            <summary>
             Rotates specified PDF document to specified angle.
            </summary>
            <param name="sourceDocumentStream">Source stream with PDF document to rotate.</param>
            <param name="destinationDocumentStream">Output stream for rotated PDF document .</param>
            <param name="rotationInfo">List of page index and rotation angle pairs. Page indexes are zero-based.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentRotator.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.ISearchResultElement">
            <summary>
            Defines the search result element interface (used in SearchResult).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Angle">
            <summary>
            Rotation angle
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Text">
            <summary>
            Text for the element
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.IsNewLine">
            <summary>
            Is located on new line (comparing to previous element).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontIsBold">
            <summary>
            Is font bold
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontIsItalic">
            <summary>
            Is font italic
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontName">
            <summary>
            Font name
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontSize">
            <summary>
            Font size in px
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontColor">
            <summary>
            Font color
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.FontColorAsOleColor">
            <summary>
            Font color as OleColor
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResultElement.Bounds">
            <summary>
            Bounds (rectangle) of the element.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.ISearchResult">
            <summary>
            Defines search result interface
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Text">
            <summary>
            Text representation of the search result (i.e. text found)
            For separate elements use Elements array to access single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Left">
            <summary>
            Left of the rectangle wrapped around all search results elements.
            For each single elements please use Elements or GetElement to get location of single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Top">
            <summary>
            Top of the rectangle wrapped around all search results elements.
            For each single elements please use Elements or GetElement to get location of single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Width">
            <summary>
            Width of the rectangle wrapped around all search results elements.
            For each single elements please use Elements or GetElement to get location of single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Height">
            <summary>
            Height of the rectangle wrapped around all search results elements.
            For each single elements please use Elements or GetElement to get location of single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Elements">
            <summary>
            Search result elements (single text elements included into the search result)
            When using as COM/ActiveX then please use GetElement(index) instead 
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ISearchResult.GetElement(System.Int32)">
            <summary>
            For use from COM/ActiveX interface:
            Returns a single search element using its index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.ElementCount">
            <summary>
            Returns number of text elements 
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ISearchResult.Bounds">
            <summary>
            Bounds (rectangle) of all elements.
            For each single elements please use Elements or GetElement to get location of single elements
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.ITableDetector">
            <summary>
             Represents PDF tables detector.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.DetectionMinNumberOfColumns">
            <summary>
            Gets or sets the min number of columns in detected table.
            </summary>
            <value>Min number of columns in detected table.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.DetectionMinNumberOfRows">
            <summary>
            Gets or sets the min number of rows in detected table.
            </summary>
            <value>Min number of rows in detected table.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.DetectionMaxNumberOfInvalidSubsequentRowsAllowed">
            <summary>
            Max number of non valid subsequent rows allowed inside detected table
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.DetectionMinNumberOfLineBreaksBetweenTables">
            <summary>
            Min number of line breaks required between tables
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.DetectLinesInsteadOfParagraphs">
            <summary>
            Tries to detect single lines instead of multiple lines.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.FoundTableLocation">
            <summary>
             Contains the location (rectangle) of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITableDetector.FoundTableCells">
            <summary>
             Contains two-dimensional array of cell rectangles of the table found by FindTable() or FindNext() methods.
            </summary>
            <remarks>
             Note, cells information is avalaible only when <see cref="T:Bytescout.PDFExtractor.ColumnDetectionMode" /> is set to <see cref="F:Bytescout.PDFExtractor.ColumnDetectionMode.BorderedTables" />.
             </remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.FindTable(System.Int32)">
            <summary>
            Searches the document page for tables.
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <returns>
                <c>true</c> if table is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.FindTable(System.Int32,System.Drawing.RectangleF@)">
            <summary>
            Searches the document page for tables.
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <param name="location">Location (rectangle) of the found table.</param>
            <returns>
                <c>true</c> if table is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.FindNextTable">
            <summary>
            Continues the table search started by FindTable() method.
            </summary>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.FindNextTable(System.Drawing.RectangleF@)">
            <summary>
            Continues the table search started by FindTable() method.
            </summary>
            <param name="location">Location (rectangle) of the found table.</param>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.GetFoundTableRectangle_Left">
            <summary>
             Returns the left coordinate of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.GetFoundTableRectangle_Top">
            <summary>
             Returns the top coordinate of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.GetFoundTableRectangle_Width">
            <summary>
             Returns the width of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITableDetector.GetFoundTableRectangle_Height">
            <summary>
             Returns the height of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentMerger">
            <summary>
             Represents PDF document merger.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentMerger.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentMerger.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentMerger.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentMerger.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.#ctor">
            <summary>
             Initializes a new instance of DocumentMerger class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of DocumentMerger class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.Merge2(System.String,System.String,System.String)">
            <summary>
             Merges 2 specified PDF documents into the single one (destinationDocument).
            </summary>
            <param name="sourceDocument1">first source document to merge.</param>
            <param name="sourceDocument2">second source document to merge.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.Merge(System.String[],System.String)">
            <summary>
             Merges multiple PDF documents into the single one.
            </summary>
            <param name="sourceDocuments">Array of PDF document file names to merge.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentMerger.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentSplitter">
            <summary>
             Represents PDF document splitter.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.DocumentSplitter.ProgressEventHandler">
            <summary>
            Defines progress event parameters.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="progress">Progress value from 0 to 100.</param>
            <param name="cancel">Interruption flag. Set it <c>true</c> to interrupt the processing.</param>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentSplitter.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.DocumentSplitter.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentSplitter.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentSplitter.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentSplitter.OptimizeSplittedDocuments">
            <summary>
             Removes unused resources from splitted document parts. 
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.DocumentSplitter.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.#ctor">
            <summary>
             Initializes a new instance of DocumentSplitter class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of DocumentSplitter class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.Split(System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>List of files of generated document parts.</returns>
            <remarks>Output files are generated in the system temporary folder. Move them to desired folder programmatically.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.Split(System.String,System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <param name="outputFolder">Output folder for generated files.</param>
            <returns>List of files of generated document parts.</returns>
            <remarks>If the output folder does not exist, the method will try to create it.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.Split(System.String,System.String,System.String,System.Int32)">
            <summary>
             Splits specified PDF or TIFF document to two documents at specified page.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document file name to split.</param>
            <param name="destinationDocument1">First output document file name.</param>
            <param name="destinationDocument2">Second output document file name.</param>
            <param name="splitAtPageNumber">1-based page number to split at. It will be first page of the second document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.ExtractPage(System.String,System.String,System.Int32)">
            <summary>
             Extracts specified page from PDF or TIFF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document to split.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="pageNumber">1-based page number to extract.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.ExtractPageRange(System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Extracts specified page range from PDF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF document to split.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="startPage">1-based start page number to extract.</param>
            <param name="endPage">1-based end page number to extract.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.RemovePage(System.String,System.String,System.Int32)">
            <summary>
             Removes specified page from PDF document.
            </summary>
            <param name="sourceDocument">Source PDF document file name.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="pageNumber">1-based page number to remove.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.RemovePageRange(System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Extracts specified page range from PDF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF document file name.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="startPage">1-based start page number to remove.</param>
            <param name="endPage">1-based end page number to remove.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.SplitCOM(System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.SplitCOM(System.String,System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <param name="outputFolder">Output folder for generated files.</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.RemoveUnusedResources(System.String)">
            <summary>
             Removes unused resources from specified PDF document. This method is called internally when OptimizeSplittedDocuments property is true,
             so you may need it to optimize documents previously splitted without the optimization.
            </summary>
            <param name="documentFileName">PDF document to remove unused resources.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.DocumentSplitter.RemoveUnusedResources(System.IO.Stream,System.IO.Stream)">
            <summary>
             Removes unused resources from PDF document. This method is called internally when OptimizeSplittedDocuments property is true,
             so you may need it to optimize documents previously splitted without the optimization.
            </summary>
            <param name="sourceDocumentStream">Source PDF document stream to remove unused resources.</param>
            <param name="destinationDocumentStream">Output document stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IAttachmentExtractor">
            <summary>
             Defines the PDF attachment extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IAttachmentExtractor.Count">
            <summary>
             Attachments count
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.GetFileName(System.Int32)">
            <summary>
             Gets the attachment filename.
            </summary>
            <returns>Attachment filename.</returns>
            <param name="index">Attachment index.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.GetSize(System.Int32)">
            <summary>
             Gets the attachment size (in bytes).
            </summary>
            <returns>Attachment size in bytes.</returns>
            <param name="index">Attachment index.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.GetAttachmentInfo(System.Int32)">
            <summary>
            Gets the detailed attachment information.
            </summary>
            <param name="index">Attachment index.</param>
            <returns>Attachment information.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.Save(System.Int32,System.String)">
            <summary>
             Saves the attachment to specified file.
            </summary>
            <returns>True if successful.</returns>
            <param name="index">Attachment index.</param>
            <param name="filename">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.SaveToFile(System.Int32,System.String)">
            <summary>
             Saves the attachment to specified file.
            </summary>
            <returns>True if successful.</returns>
            <param name="index">Attachment index.</param>
            <param name="filename">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.Save(System.Int32,System.IO.Stream)">
            <summary>
             Saves the attachment to stream.
            </summary>
            <param name="index">Attachment index.</param>
            <param name="outputStream">Output stream.</param>
            <returns>True if successful.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IAttachmentExtractor.SaveToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves the attachment to stream.
            </summary>
            <param name="index">Attachment index.</param>
            <param name="outputStream">Output stream.</param>
            <returns>True if successful.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.IDocumentMerger">
            <summary>
            Represents PDF document merger.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentMerger.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentMerger.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentMerger.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentMerger.Merge(System.String[],System.String)">
            <summary>
             Merges specified PDF documents into the single one (destination).
            </summary>
            <param name="sourceDocuments">Array of PDF document file names to merge.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentMerger.Merge2(System.String,System.String,System.String)">
            <summary>
             Merges 2 specified PDF documents into the single one (destinationDocument).
            </summary>
            <param name="sourceDocument1">first source document to merge.</param>
            <param name="sourceDocument2">second source document to merge.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentMerger.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentMerger.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IDocumentSplitter">
            <summary>
             Represents PDF document splitter.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentSplitter.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IDocumentSplitter.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentSplitter.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentSplitter.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentSplitter.OptimizeSplittedDocuments">
            <summary>
             Removes unused resources from splitted document parts. 
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.Split(System.String,System.String,System.String,System.Int32)">
            <summary>
             Splits specified PDF document to two documents at specified page.
            </summary>
            <param name="sourceDocument">Source PDF document file name to split.</param>
            <param name="destinationDocument1">First output document file name.</param>
            <param name="destinationDocument2">Second output document file name.</param>
            <param name="splitAtPageNumber">1-based page number to split at. It will be first page of the second document.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.Split(System.String,System.String)">
            <summary>
            Splits PDF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>List of files of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.Split(System.String,System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <param name="outputFolder">Output folder for generated files.</param>
            <returns>List of files of generated document parts.</returns>
            <remarks>If the output folder does not exist, the method will try to create it.</remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.SplitCOM(System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>string with a list of files of generated document parts, filenames are separated by \n character (Chr(13)).</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.SplitCOM(System.String,System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <param name="outputFolder">Output folder for generated files.</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.ExtractPage(System.String,System.String,System.Int32)">
            <summary>
             Extracts specified page from PDF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF document to split.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="pageNumber">1-based page number to extract.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.ExtractPageRange(System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Extracts specified page range from PDF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF document to split.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="startPage">1-based start page number to extract.</param>
            <param name="endPage">1-based end page number to extract.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.RemovePage(System.String,System.String,System.Int32)">
            <summary>
             Removes specified page from PDF document.
            </summary>
            <param name="sourceDocument">Source PDF document file name.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="pageNumber">1-based page number to remove.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.RemovePageRange(System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Extracts specified page range from PDF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF document file name.</param>
            <param name="destinationDocument">Output PDF document file name.</param>
            <param name="startPage">1-based start page number to remove.</param>
            <param name="endPage">1-based end page number to remove.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.GetPageCount(System.String)">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.RemoveUnusedResources(System.String)">
            <summary>
             Removes unused resources from specified PDF document. This method is called internally when OptimizeSplittedDocuments property is true, 
             so you may need it to optimize documents previously splitted without the optimization.
            </summary>
            <param name="documentFileName">PDF document to remove unused resources.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IDocumentSplitter.RemoveUnusedResources(System.IO.Stream,System.IO.Stream)">
            <summary>
             Removes unused resources from PDF document. This method is called internally when OptimizeSplittedDocuments property is true, 
             so you may need it to optimize documents previously splitted without the optimization.
            </summary>
            <param name="sourceDocumentStream">Source PDF document stream to remove unused resources.</param>
            <param name="destinationDocumentStream">Output document stream.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.IDocumentSplitter.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IXFAFormExtractor">
            <summary>
             Defines the XFA Form attachments extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFAFormExtractor.GetCount(System.Nullable{Bytescout.PDFExtractor.XFAFormContentType})">
            <summary>
             Returns count of XFA Form attachments of specified type.
            </summary>
            <param name="contentPartType">Type of XFA Form attachment. If null, method returns total count of XFA attachments.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFAFormExtractor.GetSize(Bytescout.PDFExtractor.XFAFormContentType,System.Int32)">
            <summary>
             Gets the XFA Form attachment size (in bytes).
            </summary>
            <param name="contentPartType">Type of XFA Form attachment.</param>
            <param name="index">Index of attachment of specified type.</param>
            <returns>Attachment size in bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFAFormExtractor.SaveToFile(Bytescout.PDFExtractor.XFAFormContentType,System.Int32,System.String)">
            <summary>
             Saves the XFA Form attachment to specified file.
            </summary>
            <returns>True if successfull.</returns>
            <param name="contentPartType">Type of XFA Form attachment.</param>
            <param name="index">Index of attachment of specified type.</param>
            <param name="filename">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXFAFormExtractor.SaveToStream(Bytescout.PDFExtractor.XFAFormContentType,System.Int32,System.IO.Stream)">
            <summary>
             Saves the attachment to stream.
            </summary>
            <param name="contentPartType">Type of XFA Form attachment.</param>
            <param name="index">Index of attachment of specified type.</param>
            <param name="outputStream">Output stream.</param>
            <returns>True if successfull.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFAValidator">
            <summary>
            Creates the object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFAValidator.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFAValidator" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFAValidator.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFAValidator" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFAValidator.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="documentFileStream">Input stream.</param>
        </member>
        <member name="P:Bytescout.PDFExtractor.PDFAValidator.IsPDFA">
            <summary>
            Gets value indicating whether loaded document is PDFA.
            </summary>
            <value>
                <c>true</c> if PDFA; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.PDFAValidator.ValidationErrors">
            <summary>
            Gets the list of PDF/A validation errors if any.
            </summary>
            <value>The list of PDF/A validation errors.</value>
        </member>
        <member name="T:Bytescout.PDFExtractor.TableDetector">
            <summary>
             Represents PDF tables detector.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.DetectionMinNumberOfColumns">
            <summary>
            Gets or sets the min number of columns in detected table.
            </summary>
            <value>Min number of columns in detected table.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.DetectionMinNumberOfRows">
            <summary>
            Gets or sets the min number of rows in detected table.
            </summary>
            <value>Min number of rows in detected table.</value>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.DetectionMaxNumberOfInvalidSubsequentRowsAllowed">
            <summary>
            Max number of non valid subsequent rows allowed inside detected table
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.DetectionMinNumberOfLineBreaksBetweenTables">
            <summary>
            Min number of line breaks required between tables
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.FoundTableLocation">
            <summary>
             Contains the location (rectangle) of the table found by FindTable() or FindNext() methods.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TableDetector.FoundTableCells">
            <summary>
             Contains two-dimensional array of cell rectangles of the table found by FindTable() or FindNext() methods.
            </summary>
            <remarks>
             Note, cells information is avalaible only when <see cref="T:Bytescout.PDFExtractor.ColumnDetectionMode" /> is set to <see cref="F:Bytescout.PDFExtractor.ColumnDetectionMode.BorderedTables" />.
             </remarks>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TableDetector" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TableDetector" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.Reset">
            <summary>
             Resets the instance and disposes internal resources. Also automatically invoked by <see cref="M:Bytescout.PDFExtractor.BaseExtractor.Dispose" />.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.FindTable(System.Int32)">
            <summary>
            Searches the document page for tables.
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <returns>
                <c>true</c> if table is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.FindTable(System.Int32,System.Drawing.RectangleF@)">
            <summary>
            Searches the document page for tables.
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <param name="location">Location (rectangle) of the found table.</param>
            <returns>
                <c>true</c> if table is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.FindNextTable">
            <summary>
            Continues the table search started by FindTable() method.
            </summary>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.FindNextTable(System.Drawing.RectangleF@)">
            <summary>
            Continues the table search started by FindTable() method.
            </summary>
            <param name="location">Location (rectangle) of the found table.</param>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.GetFoundTableRectangle_Left">
            <summary>
             Returns the left coordinate of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.GetFoundTableRectangle_Top">
            <summary>
             Returns the top coordinate of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.GetFoundTableRectangle_Width">
            <summary>
             Returns the width of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TableDetector.GetFoundTableRectangle_Height">
            <summary>
             Returns the height of rectangle of the table found by FindTable() or FindNextTable() methods.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.XFAFormContentType">
            <summary>
            Specifies XFA Form content part types.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Config">
            <summary>
            (0) "config" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.ConnectionSet">
            <summary>
            (1) "connectionSet" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Datasets">
            <summary>
            (2) "datasets" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Form">
            <summary>
            (3) "form" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.LocaleSet">
            <summary>
            (4) "localeSet" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Postamble">
            <summary>
            (5) "postamble" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Preamble">
            <summary>
            (6) "preamble" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Schema">
            <summary>
            (7) "schema" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Template">
            <summary>
            (8) "template" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Xfdf">
            <summary>
            (9) "xfdf" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.Xmpmeta">
            <summary>
            (10) "xmpmeta" type.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.XdpOpening">
            <summary>
            (11) "xdp:xdp" type (opening tag).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.XFAFormContentType.XdpClosing">
            <summary>
            (12) "&lt;xdp:xdp&gt;" type (closing tag).
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.XFAFormExtractor">
            <summary>
             Extracts XFA Form attachments from PDF file.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XFAFormExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XFAFormExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from stream.
            </summary>
            <param name="documentFileStream">Input stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.GetCount(System.Nullable{Bytescout.PDFExtractor.XFAFormContentType})">
            <summary>
             Returns count of XFA Form attachments of specified type.
            </summary>
            <param name="contentPartType">Type of XFA Form attachment. If null, method returns total count of XFA attachments.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.GetSize(Bytescout.PDFExtractor.XFAFormContentType,System.Int32)">
            <summary>
             Gets the XFA Form attachment size (in bytes).
            </summary>
            <param name="contentPartType">Type of XFA Form attachment.</param>
            <param name="index">Index of attachment of specified type.</param>
            <returns>Attachment size in bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.SaveToFile(Bytescout.PDFExtractor.XFAFormContentType,System.Int32,System.String)">
            <summary>
            Saves the content part to the file
            </summary>
            <param name="contentPartType">content part type</param>
            <param name="index">index of the content part (the document may have 1 or more content parts of the same content type)</param>
            <param name="filename">filename to save into</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XFAFormExtractor.SaveToStream(Bytescout.PDFExtractor.XFAFormContentType,System.Int32,System.IO.Stream)">
            <summary>
            Saves the content part to the stream
            </summary>
            <param name="contentPartType">content type part</param>
            <param name="index">index of the content part (the document may have 1 or more content parts of the same content type)</param>
            <param name="outputStream">stream to write into</param>
            <returns>return true if successful</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.XLSExtractor">
            <summary>
             Defines XLS extractor interface. Also able to extract data from PNG, JPEG, BMP and TIFF (single-page) images using Optical Character Recognition (OCR).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat">
            <summary>
            Gets or sets the output format (XLS or XLSX).
            </summary>
            <value>
                <c>Output format.</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.NumberDecimalSeparator">
            <summary>
            Number decimal separator
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.NumberGroupSeparator">
            <summary>
            Number group separator
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.AutoDetectNumbers">
            <summary>
            Automatically detect numbers to represent properly (as numbers) in cells in XLS and XLSX output
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.RichTextFormatting">
            <summary>
            Enables/disables rich text formatting inside cells
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.PageToWorksheet">
            <summary>
            Gets or sets whether to create separate worksheet for each page of PDF document. Default is <c>True</c>.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XLSExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XLSExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XLSExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SaveToXLSFile(System.String)">
            <summary>
             Saves document text as Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SaveToXLSFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves data from specified page range as Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SaveToXLSStream(System.IO.Stream)">
            <summary>
             Saves document text as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SaveToXLSStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves data from specified page range as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SavePageToXLSFile(System.Int32,System.String)">
            <summary>
             Saves document page text to Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XLSExtractor.SavePageToXLSStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves document page text as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.XLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.SpreadseetOutputFormat">
            <summary>
             Defines spreadsheet output formats.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.SpreadseetOutputFormat.XLS">
            <summary>
             XLS format.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.SpreadseetOutputFormat.XLSX">
            <summary>
             XLSX format.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IXLSExtractor">
            <summary>
             Defines XLS extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat">
            <summary>
            Gets or sets the output format (XLS or XLSX).
            </summary>
            <value>
                <c>Output format.</c>.
            </value>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.NumberDecimalSeparator">
            <summary>
            Number decimal separator
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.NumberGroupSeparator">
            <summary>
            Number group separator
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.AutoDetectNumbers">
            <summary>
            Automatically detect numbers to represent properly (as numbers) in cells in XLS and XLSX output
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.RichTextFormatting">
            <summary>
            Enables/disables rich text formatting inside cells
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.PageToWorksheet">
            <summary>
            Gets or sets whether to create separate worksheet for each page of PDF document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXLSExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SaveToXLSFile(System.String)">
            <summary>
             Saves document text as Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SaveToXLSFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves data from specified page range as Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SaveToXLSStream(System.IO.Stream)">
            <summary>
             Saves document text as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SaveToXLSStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves data from specified page range as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SavePageToXLSFile(System.Int32,System.String)">
            <summary>
             Saves document page text to Excel file. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXLSExtractor.SavePageToXLSStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves document page text as Excel spreadsheet to stream. The spreadsheet format (XLS/XLSX) is defined by <see cref="P:Bytescout.PDFExtractor.IXLSExtractor.OutputFormat" /> property.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IStructuredExtractor">
            <summary>
             Defines the table structure extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStructuredExtractor.PrepareStructure(System.Int32)">
            <summary>
             Prepares the table structure for iteration. Use it before calling GetRowCount(), GetColumnCount(), GetCellValue() methods.
            </summary>
            <param name="pageIndex">Document page index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStructuredExtractor.GetRowCount(System.Int32)">
            <summary>
             Returns number of rows in the table structure of the document.
            </summary>
            <param name="pageIndex">Document page index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStructuredExtractor.GetColumnCount(System.Int32,System.Int32)">
            <summary>
             Returns number of columns in the specified row of the table structure of the document.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IStructuredExtractor.GetCellValue(System.Int32,System.Int32,System.Int32)">
            <summary>
             Returns value of specified cell of the table structure.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <example>
                <code title="Example" description="" lang="CS">
             // Create Bytescout.PDFExtractor.StructuredExtractor instance
             StructuredExtractor extractor = new StructuredExtractor();
             extractor.RegistrationName = "demo";
             extractor.RegistrationKey = "demo";
             
             // Load sample PDF document
             extractor.LoadDocumentFromFile("sample3.pdf");
             
             extractor.PrepareStructure(0); //prepare page with index = 0
             
             int rowCount = extractor.GetRowCount(0);
             int CellsAlreadyScanned = 0;
             
             for (int row = 0; row &lt; rowCount; row++)
             {
             	int columnCount = extractor.GetColumnCount(0, row);
             
             	for (int col = 0; col &lt; columnCount; col++)
             	{
             		Trace.WriteLine(extractor.GetCellValue(0, row, col));
             	}
             
             }
             </code>
            </example>
        </member>
        <member name="T:Bytescout.PDFExtractor.StructuredExtractor">
            <summary>
             Defines the table structure extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.StructuredExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.StructuredExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.PrepareStructure(System.Int32)">
            <summary>
             Prepares the table structure for iteration. Use it before calling GetRowCount(), GetColumnCount(), GetCellValue() methods.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.GetRowCount(System.Int32)">
            <summary>
             Returns number of rows in the table structure of the document.
            </summary>
            <param name="pageIndex">Document page index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.GetColumnCount(System.Int32,System.Int32)">
            <summary>
             Returns number of columns in the specified row of the table structure of the document.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.StructuredExtractor.GetCellValue(System.Int32,System.Int32,System.Int32)">
            <summary>
             Returns value of specified cell of the table structure.
            </summary>
            <param name="pageIndex">Document page index.</param>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <example>
                <code title="Example" description="" lang="CS">
             // Create Bytescout.PDFExtractor.StructuredExtractor instance
             StructuredExtractor extractor = new StructuredExtractor();
             extractor.RegistrationName = "demo";
             extractor.RegistrationKey = "demo";
             
             // Load sample PDF document
             extractor.LoadDocumentFromFile("sample3.pdf");
             
             extractor.PrepareStructure();
             
             int rowCount = extractor.GetRowCount(0);
             
             for (int row = 0; row &lt; rowCount; row++)
             {
             	int columnCount = extractor.GetColumnCount(0, row);
             
             	for (int col = 0; col &lt; columnCount; col++)
             	{
             		Trace.WriteLine(extractor.GetCellValue(0, row, col));
             	}
             
             }
             </code>
            </example>
        </member>
        <member name="T:Bytescout.PDFExtractor.JSONExtractor">
            <summary>
             Represents PDF to XML extractor.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.JSONExtractor.SaveImages">
            <summary>
            Get or sets the image saving way: do not save; save to outer file; embed into result JSON as Base64 string. Default is <c>ImageHandling.None</c>.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.JSONExtractor.ImageFolder">
            <summary>
            Gets or sets the folder to put extracted images when <see cref="P:Bytescout.PDFExtractor.JSONExtractor.SaveImages" /> property is set to <c>ImageHandling.OuterFile</c>. 
            Default is "images" - the extractor will create "images" sub-folder in the same folder with output JSON file.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.JSONExtractor.ImageFormat">
            <summary>
            Gets or sets the image format for extracted images. Default is PNG.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.JSONExtractor.KeepOriginalFontNames">
            <summary>
            By default JSONExtractor replaces names of embedded fonts with standard (or "descendant") fonts similar by metrics and typeface. 
            This is because embedded fonts differ from fonts installed into your system or absent there at all.
            Set this property to <c>true</c> if you want to keep the original font names.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.JSONExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.JSONExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.JSONExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.GetJSONData">
            <summary>
             Extracts data from whole document as JSON string.
            </summary>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.GetJSONData(System.Int32,System.Int32)">
            <summary>
             Extracts data from specified page range as JSON string.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.GetJSONData(System.Int32)">
            <summary>
             Extracts data from specified document page as JSON string.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>String containing extracted data in JSON format.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToFile(System.String)">
            <summary>
             Saves extracted data to file in JSON format.
            </summary>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves extracted data from specified page range to file in JSON format.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToFile(System.Int32,System.String)">
            <summary>
             Saves extracted data from specified page to file in JSON format.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToStream(System.IO.Stream)">
            <summary>
             Saves extracted data to stream in JSON format.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves extracted data from specified page range to stream in JSON format.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.JSONExtractor.SaveJSONToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves extracted data from specified page to stream in JSON format.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.ImageHandling">
            <summary>
            Defines the image handling way during the XML extraction.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageHandling.None">
            <summary>
            Do not extract images during the conversion.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageHandling.OuterFile">
            <summary>
            Save images to folder specified by <see cref="P:Bytescout.PDFExtractor.XMLExtractor.ImageFolder" /> property and add the image file path to XML.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.ImageHandling.Embed">
            <summary>
            Embed images to XML file as Base64 string.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.OutputImageFormat">
            <summary>
            Defines format for output images.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OutputImageFormat.PNG">
            <summary>
            PNG format (0).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OutputImageFormat.JPEG">
            <summary> 
            JPEG format (1).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OutputImageFormat.GIF">
            <summary> 
            GIF format (2).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.OutputImageFormat.BMP">
            <summary> 
            BMP format (3).
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.XMLExtractor">
            <summary>
             Represents PDF to XML extractor. Also able to extract data from PNG, JPEG, BMP and TIFF (single-page) images using Optical Character Recognition (OCR).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XMLExtractor.SaveImages">
            <summary>
            Get or sets the image saving way: do not save; save to outer file; embed into result XML as Base64 string. Default is <c>ImageHandling.None</c>.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XMLExtractor.ImageFolder">
            <summary>
            Gets or sets the folder to put extracted images when <see cref="P:Bytescout.PDFExtractor.XMLExtractor.SaveImages" /> property is set to <c>ImageHandling.OuterFile</c>. 
            Default is "images" - the extractor will create "images" sub-folder in the same folder with output XML file.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XMLExtractor.ImageFormat">
            <summary>
            Gets or sets the image format for extracted images. Default is PNG.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XMLExtractor.KeepOriginalFontNames">
            <summary>
            By default XMLExtractor replaces names of embedded fonts with standard (or "descendant") fonts similar by metrics and typeface. 
            This is because embedded fonts differ from fonts installed into your system or absent there at all.
            Set this property to <c>true</c> if you want to keep the original font names.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.XMLExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XMLExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.XMLExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXMLDocument">
            <summary>
             Extracts XML data from whole document as XmlDocument.
            </summary>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXMLDocument(System.Int32,System.Int32)">
            <summary>
             Extracts XML data from whole document as XmlDocument.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXMLDocumentFromPage(System.Int32)">
            <summary>
             Extracts XML data from specified document page as XmlDocument.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>XmlDocument instance.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXML">
            <summary>
             Extracts XML data from whole document as string.
            </summary>
            <returns>XML string.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXML(System.Int32,System.Int32)">
            <summary>
             Extracts XML data from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XML string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.GetXMLFromPage(System.Int32)">
            <summary>
             Extracts XML data from specified document page as string.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>XML string.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SaveXMLToFile(System.String)">
            <summary>
             Saves XML data to file.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SaveXMLToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves XML data from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SaveXMLToStream(System.IO.Stream)">
            <summary>
             Saves XML data to stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SaveXMLToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves XML data from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SavePageXMLToFile(System.Int32,System.String)">
            <summary>
             Saves page XML data to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.XMLExtractor.SavePageXMLToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves page XML data to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.ICSVExtractor">
            <summary>
             Defines the PDF to CSV extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ICSVExtractor.CSVSeparatorSymbol">
            <summary>
            Gets or sets a value for CSV separator symbol. Default symbol is taken from current culture settings (CultureInfo.CurrentCulture.TextInfo.ListSeparator).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ICSVExtractor.CSVQuotaionSymbol">
            <summary>
            Gets or sets a value for CSV quotation symbol. Default id double quote.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ICSVExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.GetCSV">
            <summary>
             Extracts comma-separated (CSV) data from whole document.
            </summary>
            <returns>CSV data string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.GetCSV(System.Int32,System.Int32)">
            <summary>
             Extracts comma-separated (CSV) data from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>CSV data string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.GetCSVFromPage(System.Int32)">
            <summary>
             Extracts comma-separated (CSV) data from specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>CSV data string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToFile(System.String)">
            <summary>
             Saves comma-separated (CSV) data to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToFile(System.String,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data to file in specified encoding.
            </summary>
            <param name="fileName">File name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToFile(System.Int32,System.Int32,System.String,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to file in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToStream(System.IO.Stream)">
            <summary>
             Saves comma-separated (CSV) data to stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data to stream in specified encoding.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SaveCSVToStream(System.Int32,System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to stream in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SavePageCSVToFile(System.Int32,System.String)">
            <summary>
             Saves page comma-separated (CSV) data to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SavePageCSVToFile(System.Int32,System.String,System.Text.Encoding)">
            <summary>
             Saves page comma-separated (CSV) data to file in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SavePageCSVToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves page comma-separated (CSV) data to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ICSVExtractor.SavePageCSVToStream(System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves page comma-separated (CSV) data to stream in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.CSVExtractor">
            <summary>
             Represents PDF to CSV extractor. Also able to extract data from PNG, JPEG, BMP and TIFF (single-page) images using Optical Character Recognition (OCR).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.CSVExtractor.CSVSeparatorSymbol">
            <summary>
            Gets or sets a value for CSV separator symbol. Default symbol is taken from current culture settings (CultureInfo.CurrentCulture.TextInfo.ListSeparator).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.CSVExtractor.CSVQuotaionSymbol">
            <summary>
            Gets or sets a value for CSV quotation symbol. Default id double quote.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.CSVExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.CSVExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.CSVExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.GetCSV">
            <summary>
             Extracts comma-separated (CSV) data from whole document.
            </summary>
            <returns>CSV data string.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.GetCSV(System.Int32,System.Int32)">
            <summary>
             Extracts comma-separated (CSV) data from specified page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>CSV data string.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.GetCSVFromPage(System.Int32)">
            <summary>
             Extracts comma-separated (CSV) data from specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>CSV data string.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToFile(System.String)">
            <summary>
             Saves comma-separated (CSV) data to file.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToFile(System.String,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data to file in specified encoding.
            </summary>
            <param name="fileName">File name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToFile(System.Int32,System.Int32,System.String,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to file in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToStream(System.IO.Stream)">
            <summary>
             Saves comma-separated (CSV) data to stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data to stream in specified encoding.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SaveCSVToStream(System.Int32,System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves comma-separated (CSV) data from specified page range to stream in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SavePageCSVToFile(System.Int32,System.String)">
            <summary>
             Saves page comma-separated (CSV) data to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SavePageCSVToFile(System.Int32,System.String,System.Text.Encoding)">
            <summary>
             Saves page comma-separated (CSV) data to file in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SavePageCSVToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves page comma-separated (CSV) data to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.CSVExtractor.SavePageCSVToStream(System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
             Saves page comma-separated (CSV) data to stream in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IBaseExtractor">
            <summary>
             Defines a base interface for PDF extractors.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IBaseExtractor.PasswordRequired">
            <summary>
             Occurs when the password required to decrypt the document.
            </summary>
        </member>
        <member name="E:Bytescout.PDFExtractor.IBaseExtractor.ProgressChanged">
            <summary>
            Raised for each reported progress value. Allows to cancel the processing.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.RegistrationName">
            <summary>
             Registration name.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.RegistrationKey">
            <summary>
             Registration key.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.Password">
            <summary>
             PDF document owner password.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.Version">
            <summary>
             Gets the component version number.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.PageDataCaching">
            <summary>
            Controls page data caching behavior.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.IsDocumentLoaded">
            <summary>
            Get the document loaded state.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.Reset">
            <summary>
             Resets the instance and disposes internal resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.LoadDocumentFromFile(System.String)">
            <summary>
             Loads PDF document from specified file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.LoadDocumentFromStream(System.IO.Stream)">
            <summary>
             Loads PDF document from provided stream.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageCount">
            <summary>
             Returns document page count.
            </summary>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRotationAngle(System.Int32)">
            <summary>
            Returns the rotation angle of specified page.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Rotation angle in degrees.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRectangle(System.Int32)">
            <summary>
            Gets the page rectangle.
            </summary>
            <param name="pageIndex">Index of the page.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRect_Left(System.Int32)">
            <summary>
            Gets the specified page left coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Left coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRect_Top(System.Int32)">
            <summary>
            Gets the specified page top coordinate.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Top coordinate in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRect_Width(System.Int32)">
            <summary>
            Gets the specified page width.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page width in points.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.GetPageRect_Height(System.Int32)">
            <summary>
            Gets the specified page height.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns>Page height in points.</returns>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.ContentType">
            <summary>
            Returns content type of PDF document: normal document, portfolio or XFA form.
            To extract files from PDF portfolio use AttachmentExtractor class.
            To extract XFA form content use XFAFormExtractor class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IBaseExtractor.IsEncrypted">
            <summary>
             Gets the document encrypted state.
            </summary>
            <returns>Encryption state.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="P:Bytescout.PDFExtractor.IBaseExtractor.CheckPermissions">
            <summary>
            Defines whether respect permissions set by document owner. 
            If True, extractor throws exception when the extraction is prohibited.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IExtractionArea">
            <summary>
             Defines extraction area support for extractors
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IExtractionArea.SetExtractionArea(System.Drawing.RectangleF)">
            <summary>
             Sets the extraction area by rectangle.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IExtractionArea.SetExtractionArea(System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Sets the extraction area by coordinates and dimensions.
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IExtractionArea.ResetExtractionArea">
            <summary>
             Resets the extraction area to full page.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IExtractionArea.ExtractionAreaUsageMode">
            <summary>
            Controls how an extraction area (if any defined)
            is used when doing a text search to control if we are searching
            within any objects intersecting with an area or only within objects completely inside an area
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.IProfiles">
            <summary>
             Defines profiles support.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IProfiles.Profiles">
            <summary>
            Profiles, applied to object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IProfiles.LoadProfiles(System.String)">
            <summary>
            Loads profiles from file.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IProfiles.LoadProfilesFromString(System.String)">
            <summary>
            Loads profiles from JSON string.
            </summary>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IProfiles.LoadAndApplyProfiles(System.String)">
            <summary>
            Loads profiles from JSON string and automatically applies them.
            </summary>
            <remarks>Note, all existing profiles are discarded before loading profiles from the provided string.</remarks>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IXMLExtractor">
            <summary>
             Defines the PDF to XML extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXMLExtractor.SaveImages">
            <summary>
            Get or sets the image saving way: do not save; save to outer file; embed into result XML as Base64 string. Default is <c>ImageHandling.None</c>.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXMLExtractor.ImageFolder">
            <summary>
            Gets or sets the folder to put extracted images when <see cref="P:Bytescout.PDFExtractor.XMLExtractor.SaveImages" /> property is set to <c>ImageHandling.OuterFile</c>. 
            Default is "images" - the extractor will create "images" sub-folder in the same folder with output XML file.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXMLExtractor.ImageFormat">
            <summary>
            Gets or sets the image format for extracted images. Default is PNG.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXMLExtractor.KeepOriginalFontNames">
            <summary>
            By default XMLExtractor replaces names of embedded fonts with standard (or "descendant") fonts similar by metrics and typeface. 
            This is because embedded fonts differ from fonts installed into your system or absent there at all.
            Set this property to <c>true</c> if you want to keep the original font names.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IXMLExtractor.AllowStandalonePunctuation">
            <summary>
            Gets or sets whether to allow standalone punctuation characters. If <c>false</c> they will be merged with nearest text object.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXMLDocument">
            <summary>
             Extracts XML data from whole document as XmlDocument.
            </summary>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXMLDocument(System.Int32,System.Int32)">
            <summary>
             Extracts XML data from whole document as XmlDocument.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXML">
            <summary>
             Extracts XML data from whole document as string.
            </summary>
            <returns>XML string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXML(System.Int32,System.Int32)">
            <summary>
             Extracts XML data from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <returns>XML string.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXMLDocumentFromPage(System.Int32)">
            <summary>
             Extracts XML data from specified document page as XmlDocument.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>XmlDocument instance.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.GetXMLFromPage(System.Int32)">
            <summary>
             Extracts XML data from specified document page as string.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>XML text.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SaveXMLToFile(System.String)">
            <summary>
             Saves XML data to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SaveXMLToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves XML data from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SaveXMLToStream(System.IO.Stream)">
            <summary>
             Saves XML data to stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SaveXMLToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves XML data from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SavePageXMLToFile(System.Int32,System.String)">
            <summary>
             Saves page XML data to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.IXMLExtractor.SavePageXMLToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves page XML data to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.IImageExtractor">
            <summary>
             Defines the image extractor interface.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetDocumentImageCount">
            <summary>
             Returns count of images in the document.
            </summary>
            <returns>Count of images.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetPageImageCount(System.Int32)">
            <summary>
             Returns count of images on specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>Count of images on the page.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetFirstImage">
            <summary>
             Initializes enumeration of images in the document. If GetFirstImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods.
            </summary>
            <returns>False if no images in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetFirstPageImage(System.Int32)">
            <summary>
             Initializes enumeration of images on the document page. If GetFirstPageImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>False if no images on the page, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException">Invalid page index specified.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetNextImage">
            <summary>
             Advances image enumeration to next image. If GetNextImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods.
            </summary>
            <returns>False if no more images in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.SaveCurrentImageToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves current image to a file with specified name and format.
            </summary>
            <param name="fileName">File name.</param>
            <param name="imageFormat">Image format.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.SaveCurrentImageToStream(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves current image to the stream with specified format.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="imageFormat">Image format.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageBytesSize">
            <summary>
             Returns size of current image.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageAsArrayOfBytes">
            <summary>
             Returns current image as array of bytes. The image is always in BMP format.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="P:Bytescout.PDFExtractor.IImageExtractor.ExtractRawImages">
            <summary>
            Controls if we need to enable extraction of raw images (preserving the original dimensions of raw image saved inside PDF)
            True causes to extract images with their original dimensions
            False casues to extract images rescaled according to scaling and skews defined for rendering (so image extractor provides images similar to what you see)
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageRectangle">
            <summary>
             Returns rectangle of the current image.
            </summary>
            <returns>Rectangle bounding the image.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageRectangle_Left">
            <summary>
            Returns left coordinate of the current image image
            </summary>
            <returns>left X</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageRectangle_Top">
            <summary>
            Returns top  coordinate of the current image image
            </summary>
            <returns>top Y</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageRectangle_Width">
            <summary>
            Returns width of the current image image
            </summary>
            <returns>width</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.GetCurrentImageRectangle_Height">
            <summary>
            Returns height of the current image image
            </summary>
            <returns>height</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.SaveCurrentImageToFile(System.String)">
            <summary>
             Saves current image to PNG file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IImageExtractor.SaveCurrentImageToStream(System.IO.Stream)">
            <summary>
             Saves current image to provided stream in PNG format.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.IInfoExtractor">
            <summary>
             Defines the PDF info extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Bookmarks">
            <summary>
             Bookmarks.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Title">
            <summary>
             Title of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Author">
            <summary>
             Author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Producer">
            <summary>
             Producer of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Creator">
            <summary>
             Creator of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Keywords">
            <summary>
             Document keywords.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Subject">
            <summary>
             Document subject.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.CreationDate">
            <summary>
             Document creation date.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.CreationDateUTC">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.CreationDateISO">
            <summary>
             Gets the document creation date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.ModificationDate">
            <summary>
             Document modification date.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.ModificationDateUTC">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.ModificationDateISO">
            <summary>
             Gets the document modification date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.CustomProperties">
            <summary>
            Custom document properties.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.IInfoExtractor.Encrypted">
            <summary>
             Document encryption.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetAuthor">
            <summary>
             Gets the document author.
            </summary>
            <returns>Document author.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.IsEncrypted">
            <summary>
             Gets the document encrypted state.
            </summary>
            <returns>Encryption state.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetBookmarks">
            <summary>
             Gets the document bookmarks.
            </summary>
            <returns>Document bookmarks.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreationDate">
            <summary>
             Gets the document creation date in the local time zone and in current culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreationDate(System.Globalization.CultureInfo)">
            <summary>
             Gets the document creation date in the local time zone and in specified culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreationDateUTC">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreationDateUTC(System.Globalization.CultureInfo)">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in specified culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreationDateISO">
            <summary>
             Gets the document creation date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetModificationDate">
            <summary>
             Gets the document modification date in the local time zone and in current culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetModificationDate(System.Globalization.CultureInfo)">
            <summary>
             Gets the document modification date in the local time zone and in specified culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetModificationDateUTC">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetModificationDateUTC(System.Globalization.CultureInfo)">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in specified culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetModificationDateISO">
            <summary>
             Gets the document modification date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCreator">
            <summary>
             Gets the document creator.
            </summary>
            <returns>Document creator.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetKeywords">
            <summary>
             Gets the document keywords.
            </summary>
            <returns>Document keywords.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetProducer">
            <summary>
             Gets the document producer.
            </summary>
            <returns>Document producer.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetSubject">
            <summary>
             Gets the document subject.
            </summary>
            <returns>Document subject.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetTitle">
            <summary>
             Gets the document title.
            </summary>
            <returns>Document title.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.IInfoExtractor.GetCustomProperties">
            <summary>
             Gets document's custom properties.
            </summary>
            <returns>Custom properties as the list of key-value pairs.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.ITextExtractor">
            <summary>
             Defines the PDF to Text extractor interface.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITextExtractor.FoundText">
            <summary>
             Contains the search result of the text found by Find() or FindNext() methods.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITextExtractor.RegexSearch">
            <summary>
            Gets or sets a value indicating whether to search the text using regular expressions.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITextExtractor.PageSeparator">
            <summary>
            Gets or sets the page separator character or string. Default is '\f' (Form Feed).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITextExtractor.WordMatchingMode">
            <summary>
            Gets or sets a value indicating word matching mode (used in text search and auto removal of hyphens)
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ITextExtractor.WordMatchingPunctuationMarks">
            <summary>
            Punctuation marks used by word matching. These marks are considered as a part of a word.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.GetText">
            <summary>
             Extracts text from whole document.
            </summary>
            <returns>Document text.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.GetText(System.Int32,System.Int32)">
            <summary>
             Extracts text from specifed page range.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index (zero based). Set -1 for "to the last document page".</param>
            <returns>Concatenated text from range of pages.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.GetTextFromPage(System.Int32)">
            <summary>
             Extracts text from specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>Page text.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToFile(System.String)">
            <summary>
            Saves document text to file.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToFile(System.String,System.Text.Encoding)">
            <summary>
             Saves document text to file in specified encoding.
            </summary>
            <param name="fileName">File name.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToFile(System.Int32,System.Int32,System.String)">
            <summary>
            Saves text from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToFile(System.Int32,System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Saves text from specified page range to file in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToStream(System.IO.Stream)">
            <summary>
            Saves document text to stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves document text to stream in specified encoding.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Saves text from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SaveTextToStream(System.Int32,System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves text from specified page range to stream in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SavePageTextToFile(System.Int32,System.String)">
            <summary>
            Saves page text to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SavePageTextToFile(System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Saves page text to file in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SavePageTextToStream(System.Int32,System.IO.Stream)">
            <summary>
            Saves page text to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.SavePageTextToStream(System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves page text to stream in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.Find(System.Int32,System.String,System.Boolean)">
            <summary>
            Searches the document page for specified text.
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <param name="text">Text to find.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ITextExtractor.FindNext">
            <summary>
            Continues the text search started by Find() method.
            </summary>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Bytescout.PDFExtractor.InfoExtractor">
            <summary>
             Provides information about PDF document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Bookmarks">
            <summary>
             Bookmarks.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Title">
            <summary>
             Title of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Author">
            <summary>
             Author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Producer">
            <summary>
             Producer of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Creator">
            <summary>
             Creator of the document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Keywords">
            <summary>
             Document keywords.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.Subject">
            <summary>
             Document subject.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.CreationDate">
            <summary>
             Gets the document creation date in the local time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.CreationDateUTC">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.CreationDateISO">
            <summary>
             Gets the document creation date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.ModificationDate">
            <summary>
             Gets the document modification date in the local time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.ModificationDateUTC">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.ModificationDateISO">
            <summary>
             Gets the document modification date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.InfoExtractor.CustomProperties">
            <summary>
            Custom document properties.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.InfoExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.InfoExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.Reset">
            <summary>
            Resets the cached pages.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetAuthor">
            <summary>
             Gets the document author.
            </summary>
            <returns>Document author.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetBookmarks">
            <summary>
             Gets the document bookmarks.
            </summary>
            <returns>Document bookmarks.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreationDate">
            <summary>
             Gets the document creation date in the local time zone and in current culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreationDate(System.Globalization.CultureInfo)">
            <summary>
             Gets the document creation date in the local time zone and in specified culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreationDateUTC">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreationDateUTC(System.Globalization.CultureInfo)">
            <summary>
             Gets the document creation date in Coordinated Universal Time (UTC) time zone and in specified culture.
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreationDateISO">
            <summary>
             Gets the document creation date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
            <returns>Creation date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetModificationDate">
            <summary>
             Gets the document modification date in the local time zone and in current culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetModificationDate(System.Globalization.CultureInfo)">
            <summary>
             Gets the document modification date in the local time zone and in specified culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetModificationDateUTC">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in current culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetModificationDateUTC(System.Globalization.CultureInfo)">
            <summary>
             Gets the document modification date in Coordinated Universal Time (UTC) time zone and in specified culture.
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetModificationDateISO">
            <summary>
             Gets the document modification date in ISO 8601 format, e.g. "1997-07-16T19:20:30.45+01:00".
            </summary>
            <returns>Modification date.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCreator">
            <summary>
             Gets the document creator.
            </summary>
            <returns>Document creator.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetKeywords">
            <summary>
             Gets the document keywords.
            </summary>
            <returns>Document keywords.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetProducer">
            <summary>
             Gets the document producer.
            </summary>
            <returns>Document producer.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetSubject">
            <summary>
             Gets the document subject.
            </summary>
            <returns>Document subject.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetTitle">
            <summary>
             Gets the document title.
            </summary>
            <returns>Document title.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.InfoExtractor.GetCustomProperties">
            <summary>
             Gets document's custom properties.
            </summary>
            <returns>Custom properties as the list of key-value pairs.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.ImageExtractor">
            <summary>
             Extracts images from PDF document.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.ImageExtractor.ExtractRawImages">
            <summary>
            Controls if we need to enable extraction of raw images (preserving the original dimensions of raw image saved inside PDF).
            True causes to extract images with their original dimensions.
            False casues to extract images rescaled according to scaling and skews defined for rendering (so image extractor provides images similar to what you see).
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.ImageExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.ImageExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.Reset">
            <summary>
             Resets the <see cref="T:Bytescout.PDFExtractor.ImageExtractor" /> instance and disposes internal resources.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SetExtractionArea(System.Drawing.RectangleF)">
            <summary>
             Sets the extraction area by rectangle.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SetExtractionArea(System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Sets the extraction area by coordinates and dimensions.
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.ResetExtractionArea">
            <summary>
             Resets the extraction area to full page.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetDocumentImageCount">
            <summary>
             Returns count of images in the document.
            </summary>
            <returns>Count of images.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetPageImageCount(System.Int32)">
            <summary>
             Returns count of images on specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>Count of images on the page.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetFirstImage">
            <summary>
             Initializes enumeration of images in the document. If GetFirstImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods.
            </summary>
            <returns>False if no images in the document, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetFirstPageImage(System.Int32)">
            <summary>
             Initializes enumeration of images on the document page. If GetFirstPageImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods. 
             Call GetNextImage() to advance the enumeration.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>False if no images on the page, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException">Invalid page index specified.</exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetNextImage">
            <summary>
             Advances image enumeration to next image. If GetNextImage() returned true, you can get
             the image using SaveCurrentImage*() or GetCurrentImage*() methods.
            </summary>
            <returns>False if no more images in the enumeration, otherwise true.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SaveCurrentImageToFile(System.String)">
            <summary>
             Saves current image to PNG file with specified name.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SaveCurrentImageToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves current image to a file with specified name and format.
            </summary>
            <param name="fileName">File name.</param>
            <param name="imageFormat">Image format.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SaveCurrentImageToStream(System.IO.Stream)">
            <summary>
             Saves current image to provided stream in PNG format.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.SaveCurrentImageToStream(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves current image to the stream with specified format.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="imageFormat">Image format.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageBytesSize">
            <summary>
             Returns size of current image.
            </summary>
            <returns>Count of bytes.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageRectangle_Left">
            <summary>
            Returns left coordinate of the current image image
            </summary>
            <returns>left X</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageRectangle_Top">
            <summary>
            Returns top  coordinate of the current image image
            </summary>
            <returns>top Y</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageRectangle_Width">
            <summary>
            Returns width of the current image image
            </summary>
            <returns>width</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageRectangle_Height">
            <summary>
            Returns height of the current image image
            </summary>
            <returns>height</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageRectangle">
            <summary>
            Returns coordinates of the bounding rectangle of the image
            </summary>
            <returns>Rectangle F</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.ImageExtractor.GetCurrentImageAsArrayOfBytes">
            <summary>
             Returns current image as array of bytes. The image is always in BMP format.
            </summary>
            <returns></returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFExtractorException">
            <summary>
             Represents errors that occur during PDF extraction process.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorException" /> class.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorException" /> class.
            </summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFExtractorPermissionsException">
            <summary>
            Permissions exception.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorPermissionsException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorPermissionsException" /> class.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorPermissionsException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorPermissionsException" /> class.
            </summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFExtractorInvalidPasswordException">
            <summary>
            Invalid password exception.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorInvalidPasswordException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorInvalidPasswordException" /> class.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorInvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorInvalidPasswordException" /> class.
            </summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFExtractorDamagedDocumentException">
            <summary>
            Damaged document exception.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorDamagedDocumentException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorDamagedDocumentException" /> class.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorDamagedDocumentException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorDamagedDocumentException" /> class.
            </summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.PDFExtractorCancellationException">
            <summary>
            Cancellation exception.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorCancellationException.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorCancellationException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorCancellationException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorCancellationException" /> class.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.PDFExtractorCancellationException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.PDFExtractorCancellationException" /> class.
            </summary>
            <param name="message">The message text.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.PDFExtractor.WordMatchingMode">
            <summary>
            Word matching mode (for search).
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.WordMatchingMode.None">
            <summary>
            (0) No word matching.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.WordMatchingMode.SmartMatch">
            <summary>
            (1) Finds any words containing the search keyword. Boundaries of a found word might be expanded to letters, digits and symbols specified in WordBoundariesPunctuationMarksToInclude property.
            </summary>
        </member>
        <member name="F:Bytescout.PDFExtractor.WordMatchingMode.ExactMatch">
            <summary>
            (2) Exact word matching.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.SearchResultElement">
            <summary>
            Defines a search result element.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Index">
            <summary>
            Index of the element (zero based)
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Angle">
            <summary>
            Rotation angle
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Text">
            <summary>
            Text of the element
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.IsNewLine">
            <summary>
            Is located on new line (comparing to previous element).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontIsBold">
            <summary>
            Is font bold
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontIsItalic">
            <summary>
            Is font italic
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontName">
            <summary>
            Font name
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontSize">
            <summary>
            Font size in px
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontColor">
            <summary>
            Font color
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.FontColorAsOleColor">
            <summary>
            Font color as OleColor
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.Bounds">
            <summary>
            Location as RectangleF
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResultElement.RemainingText">
            <summary>
            The remaining text.
            </summary>
        </member>
        <member name="T:Bytescout.PDFExtractor.SearchResult">
            <summary>
            Defines search result. 
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Text">
            <summary>
            Text representation of the search result (i.e. text found)
            For separate elements use Elements array to access single elements
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchResult.#ctor(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.SearchResult" /> class.
            </summary>
            <param name="text"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Bounds">
            <summary>
            Returns location of the search result. To access location of single search result elements use Elements and SearchResultElement
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.Elements">
            <summary>
            Search result elements (single text elements included into the search result)
            ActiveX/COM users: use GetElement(index) and ElementCount instead
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchResult.GetElement(System.Int32)">
            <summary>
            For use from ActiveX/COM interface (use .Elements from .NET apps)
            Returns a single search element using its index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.PDFExtractor.SearchResult.ElementCount">
            <summary>
            For use from COM/ActiveX interface (use .Elements from .NET apps)
            returns number of text elements (access via GetElement(index))
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchResult.Dispose">
            <summary>
            Disposes Search Element object
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchResult.Finalize">
            <summary>
            destructor
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.SearchResult.Dispose(System.Boolean)">
            <summary>
            The bulk of the clean-up code is implemented in Dispose(bool)
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Bytescout.PDFExtractor.TextExtractor">
            <summary>
             Represents PDF to Text extractor. Also able to extract text from PNG, JPEG, BMP and TIFF (single-page) images using Optical Character Recognition (OCR).
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextExtractor.FoundText">
            <summary>
             Contains the bounding location (rectangle) of the text found by Find() or FindNext() methods.
             For more exact location please use .FoundSearchResult and its .FoundSearchResult.Elements[index]
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextExtractor.RegexSearch">
            <summary>
            Gets or sets a value indicating whether to search the text using regular expressions.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextExtractor.WordMatchingMode">
            <summary>
            Gets or sets a value indicating word matching mode (used in text search and auto removal of hyphens).
            This option is ignored when regular expressions are enabled (via .RegexSearch to True).
            In case of regular expressions you should use \b metacharacter to specify word bounings.
            </summary>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextExtractor.PageSeparator">
            <summary>
            Gets or sets the page separator character or string. Default is '\f'.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TextExtractor" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.PDFExtractor.TextExtractor" /> class.
            </summary>
            <param name="registrationName">Registration name.</param>
            <param name="registrationKey">Registration key.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.Reset">
            <summary>
             Resets the instance and disposes internal resources. Also automatically invoked by <see cref="M:Bytescout.PDFExtractor.BaseExtractor.Dispose" />.
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.GetText">
            <summary>
             Extracts text from whole document.
            </summary>
            <returns>Document text.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.GetText(System.Int32,System.Int32)">
            <summary>
             Extracts text from specifed page range.
            </summary>
            <param name="startPage">Start page index (zero based).</param>
            <param name="endPage">End page index (zero based). Set -1 for "to the last document page".</param>
            <returns>Concatenated text from range of pages.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.GetTextFromPage(System.Int32)">
            <summary>
             Extracts text from specified document page.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <returns>Page text.</returns>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToFile(System.String)">
            <summary>
             Saves document text to file.
            </summary>
            <param name="fileName">File name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToFile(System.String,System.Text.Encoding)">
            <summary>
             Saves document text to file in specified encoding.
            </summary>
            <param name="fileName">File name.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToFile(System.Int32,System.Int32,System.String)">
            <summary>
             Saves text from specified page range to file.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToFile(System.Int32,System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Saves text from specified page range to file in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="fileName">Output file name.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToStream(System.IO.Stream)">
            <summary>
             Saves document text to stream.
            </summary>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves document text to stream in specified encoding.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToStream(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
             Saves text from specified page range to stream.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SaveTextToStream(System.Int32,System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves text from specified page range to stream in specified encoding.
            </summary>
            <param name="startPage">Start page index.</param>
            <param name="endPage">End page index. -1 means all pages to the document end.</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SavePageTextToFile(System.Int32,System.String)">
            <summary>
             Saves page text to file.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SavePageTextToFile(System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Saves page text to file in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="fileName">Output file name.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SavePageTextToStream(System.Int32,System.IO.Stream)">
            <summary>
             Saves page text to stream.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.SavePageTextToStream(System.Int32,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves page text to stream in specified encoding.
            </summary>
            <param name="pageIndex">Page index (zero-based).</param>
            <param name="stream">Output stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:Bytescout.PDFExtractor.PDFExtractorException"></exception>
        </member>
        <member name="P:Bytescout.PDFExtractor.TextExtractor.WordMatchingPunctuationMarks">
            <summary>
            String containg chars treated as punctuation marks allowed inside words 
            (and these punctuation marks are treated as a part of a word)
            </summary>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.Find(System.Int32,System.String,System.Boolean)">
            <summary>
            Searches the document page for specified text.
            Use .FoundText to read search result information (text elements found, location)
            Use .WordMatchingMode to change word matching mode used for the search. See also .WordMatchingPunctuationMarks to change punctuation marks treated as a part of word (dot, quotes etc).
            </summary>
            <param name="pageIndex">Index of page for searching.</param>
            <param name="text">Text to find.</param>
            <param name="caseSensitive">Case sensitivity.</param>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Bytescout.PDFExtractor.TextExtractor.FindNext">
            <summary>
            Continues the text search started by Find() method.
            Use .FoundText to read search result information (text elements found, location)
            Use .WordMatchingMode to change word matching mode used for the search. See also .WordMatchingPunctuationMarks to change punctuation marks treated as a part of word (dot, quotes etc).
            Use .RegexSearch to enable regular expressions for the search.
            </summary>
            <returns>
                <c>true</c> if search string is found; otherwise <c>false</c>.</returns>
        </member>
    </members>
</doc>